// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Entry {
  id        String    @id @default(uuid())
  slug      String    @unique
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  content   String
  pictures  Picture[]
  comments  Comment[]
  likedBy   User[]    @relation(name: "likes")
  watchedBy User[]    @relation(name: "watches")
  userId    String
  user      User      @relation(fields: [userId], references: [id])
}

model Picture {
  id      String @id @default(uuid())
  file    String
  entryId String
  entry   Entry  @relation(fields: [entryId], references: [id])
}

model User {
  id            String         @id @default(uuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  username      String         @unique
  passwordHash  String
  entries       Entry[]
  comments      Comment[]
  likes         Entry[]        @relation(name: "likes")
  watches       Entry[]        @relation(name: "watches")
  notifications Notification[]
}

model Comment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  entryId   String
  entry     Entry    @relation(fields: [entryId], references: [id])
}

model Notification {
  id        String           @id @default(uuid())
  createdAt DateTime         @default(now())
  seenAt    DateTime?
  user      User             @relation(fields: [userId], references: [id])
  userId    String
  type      NotificationType
  title     String
  content   String?
  link      String?
}

enum NotificationType {
  LIKE
  COMMENT
  NEW_POST
}
