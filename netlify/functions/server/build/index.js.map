{
  "version": 3,
  "sources": ["<stdin>", "../../../../node_modules/@remix-run/dev/compiler/shims/react.ts", "../../../../app/entry.server.tsx", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/root.tsx", "../../../../app/components/error-page.tsx", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/logout.ts", "../../../../app/utils/session.server.ts", "../../../../app/utils/db.server.ts", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/index.tsx", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/login.tsx", "../../../../app/components/error-message.tsx", "../../../../app/features/login/api.ts", "../../../../app/utils/formdata.utils.server.ts", "../../../../app/utils/functional.utils.ts", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app.tsx", "../../../../app/components/app-layout.tsx", "../../../../app/hooks/useCurrentRoute.ts", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/$slug/create-comment.ts", "../../../../app/features/entries/api/create-comment.server.ts", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/$slug/update.tsx", "../../../../app/features/entries/api/update.server.ts", "../../../../app/utils/file.utils.server.ts", "../../../../app/utils/storage.server.ts", "../../../../app/utils/string.utils.ts", "../../../../app/features/entries/components/entry-form.tsx", "../../../../app/components/form-field.tsx", "../../../../app/features/entries/components/image-selector.tsx", "../../../../app/features/entries/types/entry-in-update.ts", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/$slug/index.tsx", "../../../../app/features/entries/api/delete.server.ts", "../../../../app/features/entries/components/comment-text-area.tsx", "../../../../app/utils/date.utils.ts", "../../../../app/features/entries/components/comments.tsx", "../../../../app/features/entries/components/entry-delete-modal.tsx", "../../../../app/features/entries/components/heart-button.tsx", "../../../../app/components/heart-icon.tsx", "../../../../app/features/entries/components/image-display.tsx", "../../../../app/components/sheika-logo.tsx", "../../../../app/features/entries/types/entry-in-page.ts", "../../../../app/hooks/useCurrentUser.ts", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/$slug/like.ts", "../../../../app/features/entries/api/like.server.ts", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username.tsx", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username/notifications.tsx", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username/entries.tsx", "../../../../app/features/entries/components/entry-card.tsx", "../../../../app/features/entries/components/entry-frame.tsx", "../../../../app/features/entries/components/entry-selector.tsx", "../../../../app/features/entries/components/entry-list.tsx", "../../../../app/features/users/api/entries-page.server.ts", "../../../../app/features/entries/types/entry-in-list.ts", "../../../../app/utils/pagination.server.ts", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username/index.tsx", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username/likes.tsx", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/index.tsx", "route-module:/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/new.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/entry.server.tsx\";\nimport * as route0 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/root.tsx\";\nimport * as route1 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/logout.ts\";\nimport * as route2 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/index.tsx\";\nimport * as route3 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/login.tsx\";\nimport * as route4 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app.tsx\";\nimport * as route5 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/$slug/create-comment.ts\";\nimport * as route6 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/$slug/update.tsx\";\nimport * as route7 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/$slug/index.tsx\";\nimport * as route8 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/$slug/like.ts\";\nimport * as route9 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username.tsx\";\nimport * as route10 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username/notifications.tsx\";\nimport * as route11 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username/entries.tsx\";\nimport * as route12 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username/index.tsx\";\nimport * as route13 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/users/$username/likes.tsx\";\nimport * as route14 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/index.tsx\";\nimport * as route15 from \"/Users/Quentin/Documents/Projects/Web/Remix/sheikah-diary/app/routes/app/entries/new.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/logout\": {\n    id: \"routes/logout\",\n    parentId: \"root\",\n    path: \"logout\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/login\": {\n    id: \"routes/login\",\n    parentId: \"root\",\n    path: \"login\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/app\": {\n    id: \"routes/app\",\n    parentId: \"root\",\n    path: \"app\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route4\n  },\n  \"routes/app/entries/$slug/create-comment\": {\n    id: \"routes/app/entries/$slug/create-comment\",\n    parentId: \"routes/app\",\n    path: \"entries/:slug/create-comment\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route5\n  },\n  \"routes/app/entries/$slug/update\": {\n    id: \"routes/app/entries/$slug/update\",\n    parentId: \"routes/app\",\n    path: \"entries/:slug/update\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route6\n  },\n  \"routes/app/entries/$slug/index\": {\n    id: \"routes/app/entries/$slug/index\",\n    parentId: \"routes/app\",\n    path: \"entries/:slug\",\n    index: true,\n    caseSensitive: undefined,\n    module: route7\n  },\n  \"routes/app/entries/$slug/like\": {\n    id: \"routes/app/entries/$slug/like\",\n    parentId: \"routes/app\",\n    path: \"entries/:slug/like\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route8\n  },\n  \"routes/app/users/$username\": {\n    id: \"routes/app/users/$username\",\n    parentId: \"routes/app\",\n    path: \"users/:username\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route9\n  },\n  \"routes/app/users/$username/notifications\": {\n    id: \"routes/app/users/$username/notifications\",\n    parentId: \"routes/app/users/$username\",\n    path: \"notifications\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route10\n  },\n  \"routes/app/users/$username/entries\": {\n    id: \"routes/app/users/$username/entries\",\n    parentId: \"routes/app/users/$username\",\n    path: \"entries\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route11\n  },\n  \"routes/app/users/$username/index\": {\n    id: \"routes/app/users/$username/index\",\n    parentId: \"routes/app/users/$username\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route12\n  },\n  \"routes/app/users/$username/likes\": {\n    id: \"routes/app/users/$username/likes\",\n    parentId: \"routes/app/users/$username\",\n    path: \"likes\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route13\n  },\n  \"routes/app/entries/index\": {\n    id: \"routes/app/entries/index\",\n    parentId: \"routes/app\",\n    path: \"entries\",\n    index: true,\n    caseSensitive: undefined,\n    module: route14\n  },\n  \"routes/app/entries/new\": {\n    id: \"routes/app/entries/new\",\n    parentId: \"routes/app\",\n    path: \"entries/new\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route15\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from 'react-dom/server'\nimport { RemixServer } from 'remix'\nimport type { EntryContext } from 'remix'\n\nexport default function handleRequest(\n\trequest: Request,\n\tresponseStatusCode: number,\n\tresponseHeaders: Headers,\n\tremixContext: EntryContext,\n) {\n\t// TODO https://github.com/l-mbert/remix-postcss\n\t//remixPostcss(remixContext)\n\n\tlet markup = renderToString(\n\t\t<RemixServer context={remixContext} url={request.url} />,\n\t)\n\n\tresponseHeaders.set('Content-Type', 'text/html')\n\n\treturn new Response('<!DOCTYPE html>' + markup, {\n\t\tstatus: responseStatusCode,\n\t\theaders: responseHeaders,\n\t})\n}\n", "import * as React from 'react'\nimport {\n\tLinks,\n\tLiveReload,\n\tMeta,\n\tMetaFunction,\n\tOutlet,\n\tScripts,\n\tScrollRestoration,\n\tuseCatch,\n\tuseLocation,\n} from 'remix'\nimport type { LinksFunction } from 'remix'\n\nimport globalStylesUrl from '~/styles/global.css'\nimport basicStylesUrl from '~/styles/basic.css'\nimport ErrorPage from './components/error-page'\n\n/**\n * The `links` export is a function that returns an array of objects that map to\n * the attributes for an HTML `<link>` element. These will load `<link>` tags on\n * every route in the app, but individual routes can include their own links\n * that are automatically unloaded when a user navigates away from the route.\n *\n * https://remix.run/api/app#links\n */\nexport let links: LinksFunction = () => {\n\treturn [\n\t\t{ rel: 'stylesheet', href: globalStylesUrl },\n\t\t{ rel: 'stylesheet', href: basicStylesUrl },\n\t\t{ rel: 'preconnect', href: 'https://fonts.googleapis.com' },\n\t\t{\n\t\t\trel: 'preconnect',\n\t\t\thref: 'https://fonts.gstatic.com',\n\t\t\tcrossOrigin: 'anonymous',\n\t\t},\n\t\t{\n\t\t\trel: 'stylesheet',\n\t\t\thref:\n\t\t\t\t'https://fonts.googleapis.com/css2?family=Manrope:wght@400;600&family=Spectral:wght@800&display=swap',\n\t\t\tcrossOrigin: 'anonymous',\n\t\t},\n\t\t{ rel: 'icon', href: '/favicon.png' },\n\t\t{ rel: 'icon', href: '/favicon.ico' },\n\t\t{ rel: 'icon', href: '/favicon.svg' },\n\t\t{\n\t\t\trel: 'icon',\n\t\t\thref: '/favicon-dark.png',\n\t\t\tmedia: 'prefers-color-scheme: dark',\n\t\t},\n\t\t{\n\t\t\trel: 'icon',\n\t\t\thref: '/favicon-dark.ico',\n\t\t\tmedia: 'prefers-color-scheme: dark',\n\t\t},\n\t\t{\n\t\t\trel: 'icon',\n\t\t\thref: '/favicon-dark.svg',\n\t\t\tmedia: 'prefers-color-scheme: dark',\n\t\t},\n\t\t{ rel: 'manifest', href: '/manifest.json' },\n\t]\n}\n\nexport let meta: MetaFunction = () => {\n\treturn {\n\t\t'mobile-web-app-capable': 'yes',\n\t\t'apple-mobile-web-app-capable': 'yes',\n\t\t'application-name': 'Sheika Diary',\n\t\t'apple-mobile-web-app-title': 'Sheika Diary',\n\t\t'theme-color': '#50463b',\n\t\t'msapplication-navbutton-color': '#50463b',\n\t\t'apple-mobile-web-app-status-bar-style': 'black-translucent',\n\t\t'msapplication-starturl': '/',\n\t\tviewport: 'width=device-width, initial-scale=1, shrink-to-fit=no',\n\t}\n}\n\n/**\n * The root module's default export is a component that renders the current\n * route via the `<Outlet />` component. Think of this as the global layout\n * component for your app.\n */\nexport default function App() {\n\treturn (\n\t\t<Document>\n\t\t\t<Layout>\n\t\t\t\t<Outlet />\n\t\t\t</Layout>\n\t\t</Document>\n\t)\n}\n\nfunction Document({\n\tchildren,\n\ttitle,\n}: {\n\tchildren: React.ReactNode\n\ttitle?: string\n}) {\n\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t{title ? <title>{title}</title> : null}\n\t\t\t\t<Meta />\n\t\t\t\t<Links />\n\t\t\t</head>\n\t\t\t<body style={{ backgroundColor: '#50463b' }}>\n\t\t\t\t{children}\n\t\t\t\t<RouteChangeAnnouncement />\n\t\t\t\t<Scripts />\n\t\t\t\t{process.env.NODE_ENV === 'development' && <LiveReload />}\n\t\t\t</body>\n\t\t</html>\n\t)\n}\n\nfunction Layout({ children }: React.PropsWithChildren<{}>) {\n\treturn (\n\t\t<div className=\"fixed w-full h-full text-base bg-primary-800 flex flex-col\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\nexport function CatchBoundary() {\n\tlet caught = useCatch()\n\n\tlet message\n\tswitch (caught.status) {\n\t\tcase 401:\n\t\t\tmessage = \"You don't have acces to this page\"\n\t\t\tbreak\n\t\tcase 404:\n\t\t\tmessage = 'This page does not exist'\n\t\t\tbreak\n\n\t\tdefault:\n\t\t\tthrow caught\n\t}\n\n\treturn (\n\t\t<Document title={caught.statusText}>\n\t\t\t<ErrorPage message={message} />\n\t\t</Document>\n\t)\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n\tconsole.error(error)\n\treturn (\n\t\t<Document title=\"Error!\">\n\t\t\t<ErrorPage />\n\t\t</Document>\n\t)\n}\n\n/**\n * Provides an alert for screen reader users when the route changes.\n */\nconst RouteChangeAnnouncement = React.memo(() => {\n\tlet [hydrated, setHydrated] = React.useState(false)\n\tlet [innerHtml, setInnerHtml] = React.useState('')\n\tlet location = useLocation()\n\n\tReact.useEffect(() => {\n\t\tsetHydrated(true)\n\t}, [])\n\n\tlet firstRenderRef = React.useRef(true)\n\tReact.useEffect(() => {\n\t\t// Skip the first render because we don't want an announcement on the\n\t\t// initial page load.\n\t\tif (firstRenderRef.current) {\n\t\t\tfirstRenderRef.current = false\n\t\t\treturn\n\t\t}\n\n\t\tlet pageTitle = location.pathname === '/' ? 'Home page' : document.title\n\t\tsetInnerHtml(`Navigated to ${pageTitle}`)\n\t}, [location.pathname])\n\n\t// Render nothing on the server. The live region provides no value unless\n\t// scripts are loaded and the browser takes over normal routing.\n\tif (!hydrated) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div\n\t\t\taria-live=\"assertive\"\n\t\t\taria-atomic\n\t\t\tid=\"route-change-region\"\n\t\t\tstyle={{\n\t\t\t\tborder: '0',\n\t\t\t\tclipPath: 'inset(100%)',\n\t\t\t\tclip: 'rect(0 0 0 0)',\n\t\t\t\theight: '1px',\n\t\t\t\tmargin: '-1px',\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tpadding: '0',\n\t\t\t\tposition: 'absolute',\n\t\t\t\twidth: '1px',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\twordWrap: 'normal',\n\t\t\t}}>\n\t\t\t{innerHtml}\n\t\t</div>\n\t)\n})\n", "import { Link } from 'remix'\n\nexport default function ErrorPage({\n\tmessage = 'There was an error...',\n}: {\n\tmessage?: string\n}) {\n\treturn (\n\t\t<div className=\"bg-black text-white w-screen h-screen flex justify-center items-center\">\n\t\t\t<div className=\"flex flex-col\">\n\t\t\t\t<h1 className=\"font-title text-6xl text-center transform scale-x-75\">\n\t\t\t\t\t<span className=\"text-8xl\">G</span>AME <span className=\"text-8xl\">O</span>\n\t\t\t\t\tVER\n\t\t\t\t</h1>\n\t\t\t\t<p className=\"mx-auto mt-2 mb-5\">{message}</p>\n\t\t\t\t<Link className=\"ui button\" to=\"/app/entries\">\n\t\t\t\t\tBack to the entries\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n", "import type { ActionFunction, LoaderFunction } from 'remix'\nimport { redirect } from 'remix'\nimport { logout } from '~/utils/session.server'\n\nexport let action: ActionFunction = async ({ request }) => {\n  return logout(request)\n}\n\nexport let loader: LoaderFunction = async () => {\n  return redirect('/')\n}\n", "import { Prisma, User } from '.prisma/client'\nimport bcrypt from 'bcrypt'\nimport { createCookieSessionStorage, redirect } from 'remix'\nimport { db } from './db.server'\n\ntype LoginForm = {\n\tusername: string\n\tpassword: string\n}\n\nexport async function register({ username, password }: LoginForm) {\n\tconsole.log('Request to register with username', username)\n\tlet passwordHash = await bcrypt.hash(password, 10)\n\treturn db.user.create({\n\t\tdata: { username, passwordHash },\n\t})\n}\n\nexport async function login({ username, password }: LoginForm) {\n\tconsole.log('Request to login with username', username)\n\tlet user = await db.user.findUnique({\n\t\twhere: { username },\n\t})\n\tif (!user) {\n\t\tconsole.log('User does not exists')\n\t\treturn null\n\t}\n\n\tlet isCorrectPassword = await bcrypt.compare(password, user.passwordHash)\n\tif (!isCorrectPassword) {\n\t\tconsole.log('Incorrect password')\n\t\treturn null\n\t}\n\n\treturn user\n}\n\nlet sessionSecret = process.env.SESSION_SECRET\nif (!sessionSecret) {\n\tthrow new Error('SESSION_SECRET must be set')\n}\n\nlet storage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'RJ_session',\n\t\t// normally you want this to be `secure: true`\n\t\t// but that doesn't work on localhost for Safari\n\t\t// https://web.dev/when-to-use-local-https/\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t\tsecrets: [sessionSecret],\n\t\tsameSite: 'lax',\n\t\tpath: '/',\n\t\tmaxAge: 60 * 60 * 24 * 30,\n\t\thttpOnly: true,\n\t},\n})\n\nexport function getUserSession(request: Request) {\n\treturn storage.getSession(request.headers.get('Cookie'))\n}\n\nexport async function getUserId(request: Request) {\n\tlet session = await getUserSession(request)\n\tlet userId = session.get('userId')\n\tif (!userId || typeof userId !== 'string') return null\n\treturn userId\n}\n\nexport async function requireUserId(\n\trequest: Request,\n\tredirectTo: string = new URL(request.url).pathname,\n) {\n\tconsole.log('Request to get user id from session')\n\tlet session = await getUserSession(request)\n\tlet userId = session.get('userId')\n\tif (!userId || typeof userId !== 'string') {\n\t\tconsole.log(\n\t\t\t'Unable to retrieve user id from session, redirecting to login page with redirect_to = ',\n\t\t\tredirectTo,\n\t\t)\n\t\tlet searchParams = new URLSearchParams([['redirectTo', redirectTo]])\n\t\tthrow redirect(`/login?${searchParams}`)\n\t}\n\treturn userId\n}\n\nexport async function getUser(\n\trequest: Request,\n\tinclude?: Prisma.UserInclude,\n): Promise<(User & { [k in keyof Prisma.UserInclude]: any }) | null> {\n\tlet userId = await getUserId(request)\n\tif (typeof userId !== 'string') {\n\t\tconsole.log('Unable to get user')\n\t\treturn null\n\t}\n\n\ttry {\n\t\tlet user = await db.user.findUnique({\n\t\t\twhere: { id: userId },\n\t\t\tinclude,\n\t\t})\n\t\treturn user\n\t} catch {\n\t\tthrow logout(request)\n\t}\n}\n\nexport async function logout(request: Request) {\n\tconsole.log('Request to logout')\n\n\tlet redirectTo =\n\t\t(await request.formData()).get('redirectTo')?.toString() ?? '/login'\n\n\tlet session = await storage.getSession(request.headers.get('Cookie'))\n\treturn redirect(redirectTo, {\n\t\theaders: {\n\t\t\t'Set-Cookie': await storage.destroySession(session),\n\t\t},\n\t})\n}\n\nexport async function createUserSession(userId: string, redirectTo: string) {\n\tconsole.log(\n\t\t'Request to create a user session for user with id',\n\t\tuserId,\n\t\t'and to redirect to',\n\t\tredirectTo,\n\t)\n\tlet session = await storage.getSession()\n\tsession.set('userId', userId)\n\treturn redirect(redirectTo, {\n\t\theaders: {\n\t\t\t'Set-Cookie': await storage.commitSession(session),\n\t\t},\n\t})\n}\n", "import { PrismaClient } from '@prisma/client'\n\nlet db: PrismaClient\n\ndeclare global {\n\tvar __db: PrismaClient | undefined\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === 'production') {\n\tdb = new PrismaClient()\n\tdb.$connect()\n} else {\n\tif (!global.__db) {\n\t\tglobal.__db = new PrismaClient()\n\t\tglobal.__db.$connect()\n\t}\n\tdb = global.__db\n}\n\nexport { db }\n", "import { Link, MetaFunction } from 'remix'\nimport packageJson from '../../package.json'\n\nexport let meta: MetaFunction = () => {\n\treturn {\n\t\ttitle: 'Sheikah Diary',\n\t}\n}\n\nexport default function IndexPage() {\n\treturn (\n\t\t<div className=\"w-full h-full bg-[url('/assets/main-bg.jpg')] bg-top\">\n\t\t\t<div className=\"w-full h-full flex bg-gradient-to-l from-black/60\">\n\t\t\t\t<div className=\"flex flex-col ml-auto py-10 px-5 md:px-10 lg:px-20 w-full md:w-2/3 lg:w-1/2 xl:w-1/3\">\n\t\t\t\t\t<h1 className=\"font-title text-6xl whitespace-nowrap\">\n\t\t\t\t\t\t<span className=\"text-8xl tracking-[-2rem]\">S</span>\n\t\t\t\t\t\t<span className=\"inline-block scale-x-75\">HEIKAH</span> <br />\n\t\t\t\t\t\t<span className=\"text-8xl tracking-[-1.1rem]\">D</span>\n\t\t\t\t\t\t<span className=\"inline-block scale-x-75\">IARY</span>\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tOpen Source app to share picture from <br />\n\t\t\t\t\t\t<strong>The Legend of Zelda : Breath of the Wild</strong>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<nav className=\"my-auto\">\n\t\t\t\t\t\t<ul className=\"flex flex-col space-y-5 text-xl items-end\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto=\"/app\"\n\t\t\t\t\t\t\t\t\tclassName=\"opacity-60 hover:before:content-['>'] hover:opacity-100\">\n\t\t\t\t\t\t\t\t\tOpen the app\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName=\"opacity-60 hover:before:content-['>'] hover:opacity-100\"\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/QuentinWidlocher/sheikah-diary\">\n\t\t\t\t\t\t\t\t\tSee on GitHub\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li className=\"opacity-60\">Ver. {packageJson.version}</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName=\"opacity-60 hover:opacity-100\"\n\t\t\t\t\t\t\t\t\thref={packageJson.repository.url}>\n\t\t\t\t\t\t\t\t\tSee on GitHub\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span className=\"opacity-60\">{new Date().getFullYear()} - </span>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName=\"opacity-60 hover:opacity-100\"\n\t\t\t\t\t\t\t\t\thref={packageJson.author.url}>\n\t\t\t\t\t\t\t\t\t{packageJson.author.name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n", "import { useState } from 'react'\nimport { FiEye, FiEyeOff } from 'react-icons/fi'\nimport {\n\tForm,\n\tLink,\n\tLinksFunction,\n\tMetaFunction,\n\tuseActionData,\n\tuseSearchParams,\n} from 'remix'\nimport ErrorMessage from '~/components/error-message'\nimport { loginAction, LoginFormError } from '~/features/login/api'\nimport { invert } from '~/utils/functional.utils'\nimport stylesUrl from '../styles/login.css'\n\nexport let links: LinksFunction = () => {\n\treturn [{ rel: 'stylesheet', href: stylesUrl }]\n}\n\nexport let meta: MetaFunction = () => {\n\treturn {\n\t\ttitle: 'Login | Sheikah Diary',\n\t}\n}\n\nexport let action = loginAction\n\nexport default function Login() {\n\tlet errors = useActionData<LoginFormError | undefined>()\n\tlet [searchParams] = useSearchParams()\n\n\tconst [showPassword, setShowPassword] = useState(false)\n\n\treturn (\n\t\t<div className=\"wrapper\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\taria-describedby={errors?._errors ? 'form-error-message' : undefined}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\tname=\"redirectTo\"\n\t\t\t\t\t\tvalue={searchParams.get('redirectTo') ?? undefined}\n\t\t\t\t\t/>\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<legend className=\"sr-only\">Login or Register?</legend>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label className=\"radio\">\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"loginType\" value=\"login\" defaultChecked />\n\t\t\t\t\t\t\t\t<div>Login</div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label className=\"radio\">\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"loginType\" value=\"register\" />\n\t\t\t\t\t\t\t\t<div>Register</div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"username-input\">Username</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\ttabIndex={1}\n\t\t\t\t\t\t\tid=\"username-input\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\taria-invalid={Boolean(errors?.username)}\n\t\t\t\t\t\t\taria-describedby={errors?.username ? 'username-error' : undefined}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"w-full\" role=\"separator\"></div>\n\t\t\t\t\t\t<ErrorMessage className=\"ml-auto mr-2\" error={errors?.username} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className=\"flex justify-between\" htmlFor=\"password-input\">\n\t\t\t\t\t\t\t<span>Password</span>\n\t\t\t\t\t\t\t<button type=\"button\" onClick={() => setShowPassword(invert)}>\n\t\t\t\t\t\t\t\t{showPassword ? <FiEyeOff /> : <FiEye />}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"password-input\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\ttabIndex={1}\n\t\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\taria-invalid={Boolean(errors?.password) || undefined}\n\t\t\t\t\t\t\taria-describedby={errors?.password ? 'password-error' : undefined}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"w-full\" role=\"separator\"></div>\n\t\t\t\t\t\t<ErrorMessage className=\"ml-auto mr-2\" error={errors?.password} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"form-error-message\">\n\t\t\t\t\t\t<ErrorMessage error={errors} onlyFirst={false} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" className=\"button\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t\t<nav className=\"absolute bottom-0 right-0 p-5 font-bold\">\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"filter hover:drop-shadow-base focus:drop-shadow-base\"\n\t\t\t\t\tto=\"/app/entries\">\n\t\t\t\t\tSee the entries\n\t\t\t\t</Link>\n\t\t\t</nav>\n\t\t</div>\n\t)\n}\n", "type ErrorMessageProps = {\n\terror?: { _errors?: string[] }\n\tonlyFirst?: boolean\n\tclassName?: string\n}\n\nexport default function ErrorMessage({\n\terror,\n\tclassName = '',\n\tonlyFirst = true,\n}: ErrorMessageProps) {\n\treturn error?._errors?.length ? (\n\t\t<small className={'text-sm text-danger-500 ' + className}>\n\t\t\t{onlyFirst\n\t\t\t\t? error._errors[0]\n\t\t\t\t: error._errors.map((e, i, l) => (\n\t\t\t\t\t\t<span key={e}>\n\t\t\t\t\t\t\t{e} {i <= l.length ? <br /> : null}\n\t\t\t\t\t\t</span>\n\t\t\t\t  ))}\n\t\t</small>\n\t) : null\n}\n", "import { ActionFunction } from 'remix'\nimport { z } from 'zod'\nimport { db } from '~/utils/db.server'\nimport { login, createUserSession, register } from '~/utils/session.server'\nimport { safeParseFormData } from '../../utils/formdata.utils.server'\n\nlet formValidator = z.object({\n\tusername: z.string().min(1, { message: 'The username is required' }),\n\tpassword: z\n\t\t.string()\n\t\t.min(6, { message: 'The password must be at least 6 characters' }),\n\tredirectTo: z.string().optional(),\n\tloginType: z.literal('login').or(z.literal('register')),\n})\n\nexport type LoginFormType = z.infer<typeof formValidator>\nexport type LoginFormError = z.ZodFormattedError<LoginFormType>\n\nexport let loginAction: ActionFunction = async ({\n\trequest,\n}): Promise<Response | LoginFormError> => {\n\tlet parsedFormData = await safeParseFormData(request, formValidator)\n\n\tif (!parsedFormData.success) {\n\t\treturn parsedFormData.error.format()\n\t}\n\n\tlet {\n\t\tloginType,\n\t\tpassword,\n\t\tusername,\n\t\tredirectTo = '/app/entries',\n\t} = parsedFormData.data\n\n\tswitch (loginType) {\n\t\tcase 'login': {\n\t\t\tlet user = await login({ username, password })\n\t\t\tif (!user) {\n\t\t\t\treturn {\n\t\t\t\t\t_errors: ['Username/Password combination is incorrect'],\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn createUserSession(user.id, redirectTo)\n\t\t}\n\n\t\tcase 'register': {\n\t\t\tlet userExists = await db.user.findFirst({\n\t\t\t\tselect: { id: true },\n\t\t\t\twhere: { username },\n\t\t\t})\n\n\t\t\tif (userExists) {\n\t\t\t\treturn {\n\t\t\t\t\tusername: {\n\t\t\t\t\t\t_errors: [`User with username ${username} already exists`],\n\t\t\t\t\t},\n\t\t\t\t\t_errors: [],\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet user = await register({ username, password })\n\n\t\t\tif (!user) {\n\t\t\t\treturn {\n\t\t\t\t\t_errors: ['Something went wrong trying to create a new user.'],\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn createUserSession(user.id, redirectTo)\n\t\t}\n\t\tdefault: {\n\t\t\treturn { _errors: ['Login type invalid'] }\n\t\t}\n\t}\n}\n", "import { z } from 'zod'\n\nfunction getObjectFromFormData(request: Request) {\n\treturn request.formData().then(fd => Object.fromEntries(fd.entries()))\n}\n\nfunction transformField(val: unknown | null) {\n\tswitch (val) {\n\t\tcase 'true':\n\t\t\treturn true\n\t\tcase 'false':\n\t\t\treturn false\n\t\tdefault:\n\t\t\treturn val\n\t}\n}\n\nfunction transformFields(obj: any) {\n\treturn Object.keys(obj as any).reduce(\n\t\t(acc, k) => ({\n\t\t\t...acc,\n\t\t\t[k]: transformField(obj[k]),\n\t\t}),\n\t\t{},\n\t)\n}\n\nfunction transformFormData<T extends z.ZodRawShape>(validator: z.ZodObject<T>) {\n\treturn z.preprocess(\n\t\tobj => (typeof obj == 'object' ? transformFields(obj) : obj),\n\t\tvalidator,\n\t)\n}\n\nexport async function safeParseFormData<T extends z.ZodRawShape>(\n\trequest: Request,\n\tvalidator: z.ZodObject<T>,\n) {\n\treturn getObjectFromFormData(request).then(x =>\n\t\ttransformFormData(validator).safeParse(x),\n\t)\n}\n\nexport async function parseFormData<T extends z.ZodRawShape>(\n\trequest: Request,\n\tvalidator: z.ZodObject<T>,\n) {\n\treturn getObjectFromFormData(request).then(x =>\n\t\ttransformFormData(validator).parse(x),\n\t)\n}\n", "export function invert(x: boolean) {\n\treturn !x\n}\n", "import { Notification, User } from '@prisma/client'\nimport { FiArrowLeft, FiHome, FiMenu, FiPlus } from 'react-icons/fi'\nimport {\n\tLink,\n\tLinksFunction,\n\tLoaderFunction,\n\tOutlet,\n\tredirect,\n\tuseLoaderData,\n\tuseMatches,\n} from 'remix'\nimport AppLayout from '~/components/app-layout'\nimport useCurrentRoute from '~/hooks/useCurrentRoute'\nimport entriesStylesheet from '~/styles/entries.css'\nimport { getUser } from '~/utils/session.server'\n\nexport let links: LinksFunction = () => [\n\t{ rel: 'stylesheet', href: entriesStylesheet },\n]\n\nexport let loader: LoaderFunction = async ({ request, context }) => {\n\t// /app is not a proper endpoint, redirecting to /app/entries\n\tif (request.url.endsWith('/app') || request.url.endsWith('/app/')) {\n\t\treturn redirect('/app/entries')\n\t}\n\n\tlet currentUser = await getUser(request, {\n\t\tnotifications: true,\n\t})\n\n\tif (!currentUser) {\n\t\treturn null\n\t}\n\n\tlet newNotif = (currentUser.notifications as Notification[]).some(\n\t\tn => !n.seenAt,\n\t)\n\n\treturn {\n\t\tcurrentUser,\n\t\tnewNotif,\n\t}\n}\n\n// We just display the pages for now, we use this file to link the stylesheet\nexport default function AppPage() {\n\tlet loader = useLoaderData<{ currentUser: User; newNotif: boolean } | null>()\n\tlet currentRoute = useCurrentRoute()\n\n\treturn (\n\t\t<AppLayout\n\t\t\theader={\n\t\t\t\t<>\n\t\t\t\t\t{currentRoute != '/app/entries' ? (\n\t\t\t\t\t\t<Link to=\"/app/entries\" className=\"sheika button mr-auto\">\n\t\t\t\t\t\t\t<FiArrowLeft size=\"1.5rem\" />\n\t\t\t\t\t\t\t<span>Back to the entries</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Link to=\"/\" className=\"sheika button mr-auto\">\n\t\t\t\t\t\t\t<FiMenu size=\"1.5rem\" />\n\t\t\t\t\t\t\t<span>Main menu</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t\t{loader?.currentUser ? (\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"sheika button ml-auto relative\"\n\t\t\t\t\t\t\tto={`/app/users/${loader.currentUser.username}/notifications`}>\n\t\t\t\t\t\t\t{loader.currentUser.username}\n\t\t\t\t\t\t\t{loader.newNotif ? (\n\t\t\t\t\t\t\t\t<div className=\"absolute bottom-3 right-2 rounded-full bg-danger-500 w-2 h-2\"></div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"sheika button ml-auto\"\n\t\t\t\t\t\t\tto={`/login?redirectTo=${currentRoute}`}>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t}\n\t\t\tmain={<Outlet />}\n\t\t\tfooter={\n\t\t\t\t!loader?.currentUser ? null : (\n\t\t\t\t\t<Link to=\"/app/entries/new\" className=\"sheika button ml-auto\">\n\t\t\t\t\t\t<FiPlus size=\"1.5rem\" />\n\t\t\t\t\t\t<span>Add an entry</span>\n\t\t\t\t\t</Link>\n\t\t\t\t)\n\t\t\t}\n\t\t/>\n\t)\n}\n", "import { Children, ReactNode } from \"react\"\n\ntype AppLayoutProps = {\n  header: ReactNode\n  main: ReactNode\n  footer: ReactNode\n}\n\nexport default function AppLayout({ header, footer, main }: AppLayoutProps) {\n  return (\n    <div className=\"entries-layout\">\n      <header>\n        <div className=\"bg-picture\"></div>\n        <nav className=\"flex\">\n          {header}\n        </nav>\n      </header>\n      <main>\n        {main}\n        <div className=\"bg-picture\"></div>\n      </main>\n      <footer>\n        <div className=\"bg-picture\"></div>\n        <nav className=\"flex\">\n          {footer}\n        </nav>\n      </footer>\n    </div>\n  )\n}\n", "import { useMatches } from 'remix'\n\nexport default function useCurrentRoute(): string | undefined {\n\tlet matches = useMatches()\n\treturn matches[matches.length - 1]?.pathname\n}\n", "import { ActionFunction } from 'remix'\nimport { createCommentAction } from '~/features/entries/api/create-comment.server'\n\nexport let action: ActionFunction = (args) => createCommentAction(args)\n", "import { Entry, NotificationType, User } from '@prisma/client'\nimport { ActionFunction, redirect } from 'remix'\nimport { z } from 'zod'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport { safeParseFormData } from '../../../utils/formdata.utils.server'\n\nconst formValidator = z.object({\n\tbody: z.string().nonempty({ message: 'You cannot send an empty comment' }),\n})\n\nexport let createCommentAction: ActionFunction = async ({\n\trequest,\n\tparams,\n}) => {\n\tlet currentPage = new URL(request.url).pathname\n\n\tlet user = await getUser(request)\n\n\tif (!user) {\n\t\treturn redirect(`/login?redirectTo=${currentPage}`)\n\t}\n\n\tlet foundEntry = await db.entry.findFirst({\n\t\twhere: {\n\t\t\tslug: params.slug,\n\t\t},\n\t\tselect: {\n\t\t\tid: true,\n\t\t\ttitle: true,\n\t\t},\n\t})\n\n\tif (!foundEntry || !params.slug) {\n\t\treturn redirect('/app/entries')\n\t}\n\n\tlet parsedForm = await safeParseFormData(request, formValidator)\n\n\tif (!parsedForm.success) {\n\t\treturn parsedForm.error.format()\n\t}\n\n\t// no await here because this can be executed later\n\tcreateNotifications(\n\t\tuser,\n\t\t{\n\t\t\tid: foundEntry.id,\n\t\t\ttitle: foundEntry.title,\n\t\t\tslug: params.slug,\n\t\t},\n\t\tparsedForm.data.body,\n\t)\n\n\treturn db.comment.create({\n\t\tdata: {\n\t\t\tbody: parsedForm.data.body,\n\t\t\tentryId: foundEntry.id,\n\t\t\tuserId: user.id,\n\t\t},\n\t})\n}\n\nasync function createNotifications(\n\tfrom: Pick<User, 'username'>,\n\tentry: Pick<Entry, 'id' | 'slug' | 'title'>,\n\tcomment: string,\n) {\n\tlet usersWatchingThisEntry = await db.user.findMany({\n\t\tselect: {\n\t\t\tid: true,\n\t\t},\n\t\twhere: {\n\t\t\twatches: {\n\t\t\t\tsome: {\n\t\t\t\t\tid: entry.id,\n\t\t\t\t},\n\t\t\t},\n\t\t\tusername: {\n\t\t\t\tnot: {\n\t\t\t\t\tequals: from.username,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\tconsole.log(\n\t\t'Creating a notification on entry',\n\t\tentry.slug,\n\t\t'for users',\n\t\tusersWatchingThisEntry.map(e => e.id),\n\t)\n\n\t// We create as much notifications as they are users \"subscribed\" to this entry\n\tawait db.notification.createMany({\n\t\tdata: usersWatchingThisEntry.map(user => ({\n\t\t\tuserId: user.id,\n\t\t\ttitle: `${from.username} commented on ${entry.title}`,\n\t\t\tcontent: comment,\n\t\t\tlink: `/app/entries/${entry.slug}`,\n\t\t\ttype: NotificationType.COMMENT,\n\t\t})),\n\t})\n\n\t// We \"subscribe\" the poster to the entry so he can receive replies\n\tawait db.user.update({\n\t\twhere: {\n\t\t\tusername: from.username,\n\t\t},\n\t\tdata: {\n\t\t\twatches: {\n\t\t\t\tconnect: {\n\t\t\t\t\tid: entry.id,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n}\n", "import {\n\tLink,\n\tLinksFunction,\n\tLoaderFunction,\n\tredirect,\n\tuseLoaderData,\n\tuseTransition,\n} from 'remix'\nimport { deserialize, serialize } from 'superjson'\nimport { z } from 'zod'\nimport { updateAction } from '~/features/entries/api/update.server'\nimport EntryForm from '~/features/entries/components/entry-form'\nimport {\n\tEntryInUpdate,\n\tgetPrismaSelectEntryInUpdate,\n} from '~/features/entries/types/entry-in-update'\nimport formStylesheet from '~/styles/forms.css'\nimport { db } from '~/utils/db.server'\n\nexport let links: LinksFunction = () => [\n\t{ rel: 'stylesheet', href: formStylesheet },\n]\n\nexport let loader: LoaderFunction = async ({ params }) => {\n\tlet slug = z.string().parse(params?.slug)\n\n\tlet entry: EntryInUpdate | null = await db.entry.findFirst({\n\t\tselect: getPrismaSelectEntryInUpdate(),\n\t\twhere: {\n\t\t\tslug,\n\t\t},\n\t})\n\n\tif (!entry) {\n\t\treturn redirect('/app/entries')\n\t}\n\n\treturn serialize(entry)\n}\n\nexport let action = updateAction\n\nexport default function EntryUpdateBySlug() {\n\tlet defaultValues = deserialize<EntryInUpdate>(useLoaderData())\n\tlet transition = useTransition()\n\n\treturn (\n\t\t<EntryForm\n\t\t\ttransition={transition}\n\t\t\tsubmitLabel={{ default: 'Update entry', sending: 'Updating entry' }}\n\t\t\tdefaultValues={defaultValues}\n\t\t\taction={'/app/entries/' + defaultValues.slug + '/update'}\n\t\t\tButtonsSlot={() => (\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"sheika button mr-3\"\n\t\t\t\t\tto={'/app/entries/' + defaultValues.slug}>\n\t\t\t\t\tCancel\n\t\t\t\t</Link>\n\t\t\t)}\n\t\t/>\n\t)\n}\n", "import { Prisma } from '@prisma/client'\nimport { ActionFunction, redirect } from 'remix'\nimport { z } from 'zod'\nimport { db } from '~/utils/db.server'\nimport { base64ImageValidTypeRegex, saveImage } from '~/utils/file.utils.server'\nimport { safeParseFormData } from '~/utils/formdata.utils.server'\nimport { requireUserId } from '~/utils/session.server'\nimport { slugify } from '~/utils/string.utils'\nimport { NewEntry } from '../types/entries'\n\nlet formValidator = z.object({\n\ttitle: z.string().nonempty({ message: 'The title is required' }),\n\toriginalSlug: z.string().optional(),\n\tcontent: z.string().optional().default(''),\n\tmainPicture: z.literal('').or(\n\t\tz.string().regex(base64ImageValidTypeRegex, {\n\t\t\tmessage: 'Not a valid image format',\n\t\t}),\n\t),\n})\n\nexport type FormError = z.ZodFormattedError<z.infer<typeof formValidator>>\n\nasync function getUniqueSlug(title: string) {\n\tlet originalSlug = slugify(title)\n\n\tlet entriesExistingWithSlug = await db.entry.count({\n\t\twhere: {\n\t\t\tslug: {\n\t\t\t\tstartsWith: originalSlug,\n\t\t\t},\n\t\t},\n\t})\n\n\tlet result = originalSlug\n\n\tif (entriesExistingWithSlug > 0) {\n\t\tresult = `${originalSlug}-${entriesExistingWithSlug + 1}`\n\t\tconsole.log(\n\t\t\t`Slug was going to be \"${originalSlug}\" but is instead \"${result}\"`,\n\t\t)\n\t}\n\n\treturn result\n}\n\nexport let baseUpdateAction = async (\n\trequest: Request,\n\taction: (\n\t\tdata: z.infer<typeof formValidator> & { userId: string },\n\t) => Promise<string>,\n) => {\n\tlet userId = await requireUserId(request)\n\n\tconsole.debug('Parsing form data')\n\t// Idk why but await request.formData() justs freezes\n\tlet formData = new URLSearchParams(await request.text())\n\tconsole.debug('Parsed form data : ', formData.keys())\n\n\tlet parsedForm = formValidator.safeParse(\n\t\tObject.fromEntries(formData.entries()),\n\t)\n\n\tif (!parsedForm.success) {\n\t\treturn parsedForm.error.format()\n\t}\n\n\ttry {\n\t\tlet slug = await action({ ...parsedForm.data, userId })\n\t\treturn redirect(`/app/entries/${slug}`)\n\t} catch {\n\t\treturn null\n\t}\n}\n\nexport let createAction: ActionFunction = async ({ request }) => {\n\tconsole.log('Request to create entry')\n\treturn baseUpdateAction(request, async form => {\n\t\tlet data: Prisma.EntryCreateInput = {\n\t\t\ttitle: form.title,\n\t\t\tcontent: form.content,\n\t\t\tslug: await getUniqueSlug(form.title),\n\t\t\tuser: {\n\t\t\t\tconnect: {\n\t\t\t\t\tid: form.userId,\n\t\t\t\t},\n\t\t\t},\n\t\t\t// We automatically like the post we made, like on Reddit\n\t\t\tlikedBy: {\n\t\t\t\tconnect: {\n\t\t\t\t\tid: form.userId,\n\t\t\t\t},\n\t\t\t},\n\t\t\t// And we automatically receive notifications too\n\t\t\twatchedBy: {\n\t\t\t\tconnect: {\n\t\t\t\t\tid: form.userId,\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\n\t\tlet createdEntry = await db.entry.create({ data })\n\n\t\tif (form.mainPicture) {\n\t\t\tsaveImage(form.mainPicture, createdEntry.id).then(() =>\n\t\t\t\tconsole.log('File has been saved'),\n\t\t\t)\n\t\t}\n\n\t\treturn createdEntry.slug\n\t})\n}\n\nexport let updateAction: ActionFunction = async ({ request }) => {\n\tconsole.log('Request to update entry')\n\treturn baseUpdateAction(request, async form => {\n\t\tif (!form.originalSlug) {\n\t\t\tthrow Error('Cannot update entry without its original slug')\n\t\t}\n\n\t\tlet data: NewEntry = {\n\t\t\ttitle: form.title,\n\t\t\tcontent: form.content,\n\t\t\tslug: await getUniqueSlug(form.title),\n\t\t\tuserId: form.userId,\n\t\t}\n\n\t\tlet updatedEntry = await db.entry.update({\n\t\t\tdata,\n\t\t\twhere: {\n\t\t\t\tslug: form.originalSlug,\n\t\t\t},\n\t\t})\n\n\t\tif (form.mainPicture) {\n\t\t\tawait saveImage(form.mainPicture, updatedEntry.id)\n\t\t}\n\n\t\treturn updatedEntry.slug\n\t})\n}\n", "import fs from 'fs/promises'\nimport path from 'path'\nimport sharp from 'sharp'\nimport { db } from './db.server'\nimport { pictures, storage } from './storage.server'\n\nexport const base64ImageValidTypeRegex = /^data:image\\/(\\w*);base64,/\nexport const base64GetExtRegex = /^data:image\\/(.*);base64,/\n\nlet imagePath = '/tmp'\n\nexport function getFileInfos(\n\tbase64: string,\n\tbaseName: string,\n): [\n\tbase64: string,\n\tfileName: string,\n\tpreviewFileName: string,\n\tthumbnailFileName: string,\n\text: string,\n] {\n\tlet base64Data = base64.split(';base64,').pop() ?? ''\n\tlet fileExt = base64GetExtRegex.exec(base64)?.[1]\n\n\treturn [\n\t\tbase64Data,\n\t\t`${baseName}.${fileExt}`,\n\t\t`${baseName}-preview.${fileExt}`,\n\t\t`${baseName}-thumbnail.${fileExt}`,\n\t\tfileExt ?? 'jpg',\n\t]\n}\n\nexport async function saveImage(base64: string, entryId: string) {\n\tconsole.log('Saving image for entry', entryId)\n\n\tlet [base64Data, fileName, previewFileName, thumbnailFileName, ext] =\n\t\tgetFileInfos(base64, entryId)\n\n\tif (base64Data && fileName) {\n\t\tlet fullPath = path.join(imagePath, fileName)\n\t\tlet fullPreviewPath = path.join(imagePath, previewFileName)\n\t\tlet fullThumbailPath = path.join(imagePath, thumbnailFileName)\n\n\t\tawait fs.writeFile(fullPath, base64Data, {\n\t\t\tencoding: 'base64',\n\t\t})\n\n\t\tconsole.debug('Temporary file has been created here ', fullPath)\n\n\t\tawait Promise.all([\n\t\t\tsharp(fullPath).resize(1280).toFile(fullPreviewPath),\n\t\t\tsharp(fullPath).resize(500).toFile(fullThumbailPath),\n\t\t])\n\n\t\tconsole.debug('The two versions of the files has been created')\n\n\t\tawait Promise.all([\n\t\t\tpictures.upload(fileName, await fs.readFile(fullPath), {\n\t\t\t\tcontentType: `image/${ext}`,\n\t\t\t}),\n\t\t\tpictures.upload(previewFileName, await fs.readFile(fullPreviewPath), {\n\t\t\t\tcontentType: `image/${ext}`,\n\t\t\t}),\n\t\t\tpictures.upload(thumbnailFileName, await fs.readFile(fullThumbailPath), {\n\t\t\t\tcontentType: `image/${ext}`,\n\t\t\t}),\n\t\t])\n\n\t\tconsole.debug('All 3 versions of the file has been uploaded')\n\n\t\treturn db.picture.create({\n\t\t\tdata: {\n\t\t\t\tfile: fileName,\n\t\t\t\tpreview: previewFileName,\n\t\t\t\tthumbnail: thumbnailFileName,\n\t\t\t\tentryId,\n\t\t\t},\n\t\t})\n\t}\n\n\tthrow new Error('Unable to save the picture')\n}\n", "import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.SUPABASE_URL\nconst supabaseKey = process.env.SUPABASE_ANON_KEY\nconst supabase = createClient(supabaseUrl!, supabaseKey!)\n\nexport const storage = supabase.storage\nexport const pictures = storage.from('pictures')\n", "export function slugify(text: string): string {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, '') // Trim - from end of text\n}\n", "import { Transition } from '@remix-run/react/transition'\nimport { useState } from 'react'\nimport ReactLoading from 'react-loading'\nimport { Form } from 'remix'\nimport FormField from '~/components/form-field'\nimport { FormError } from '../api/update.server'\nimport { EntryInUpdate } from '../types/entry-in-update'\nimport ImageSelector from './image-selector'\n\ntype EntryFormProps = {\n\terrors?: FormError\n\ttransition: Transition\n\tsubmitLabel: { default: string; sending: string }\n\taction: string\n\tdefaultValues?: EntryInUpdate\n\tButtonsSlot?: () => JSX.Element\n}\n\nexport default function EntryForm({\n\terrors,\n\ttransition,\n\tsubmitLabel,\n\taction,\n\tdefaultValues,\n\tButtonsSlot,\n}: EntryFormProps) {\n\tconst [mainPicture, setMainPicture] = useState<\n\t\t{ b64: string; name: string } | undefined\n\t>(undefined)\n\n\tconst [imageIsLoading, setImageIsLoading] = useState(true)\n\n\treturn (\n\t\t<div className=\"mt-16 px-3 md:mx-auto w-full md:w-3/4 lg:w-1/2\">\n\t\t\t<Form method=\"post\" action={action}>\n\t\t\t\t<div className=\"-mx-3\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\tname=\"originalSlug\"\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t\tvalue={defaultValues?.slug}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormField error={errors?.mainPicture}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\t\tname=\"mainPicture\"\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\tvalue={mainPicture?.b64}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ImageSelector\n\t\t\t\t\t\t\tloadedImage={mainPicture}\n\t\t\t\t\t\t\tonImageLoaded={setMainPicture}\n\t\t\t\t\t\t\tonImageLoading={setImageIsLoading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormField>\n\t\t\t\t\t<FormField label=\"Title\" error={errors?.title}>\n\t\t\t\t\t\t<input type=\"text\" name=\"title\" defaultValue={defaultValues?.title} />\n\t\t\t\t\t</FormField>\n\t\t\t\t\t<FormField label=\"Content\" error={errors?.content}>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\t\tdefaultValue={defaultValues?.content}\n\t\t\t\t\t\t\trows={8}></textarea>\n\t\t\t\t\t</FormField>\n\t\t\t\t</div>\n\t\t\t\t<div role=\"separator\"></div>\n\t\t\t\t<div className=\"flex justify-end\">\n\t\t\t\t\t{ButtonsSlot ? <ButtonsSlot /> : null}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"sheika button\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={!!transition.submission || imageIsLoading}>\n\t\t\t\t\t\t{transition.submission ? (\n\t\t\t\t\t\t\t<div className=\"flex space-x-3\">\n\t\t\t\t\t\t\t\t<ReactLoading\n\t\t\t\t\t\t\t\t\ttype=\"spinningBubbles\"\n\t\t\t\t\t\t\t\t\tcolor=\"var(--primary-500)\"\n\t\t\t\t\t\t\t\t\theight=\"1.5rem\"\n\t\t\t\t\t\t\t\t\twidth=\"1.5rem\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span>{submitLabel.sending}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tsubmitLabel.default\n\t\t\t\t\t\t)}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t</div>\n\t)\n}\n", "import ErrorMessage from './error-message'\n\ntype FormFieldProps = React.PropsWithChildren<{\n  label?: string\n  error?: { _errors: string[] | undefined } | undefined\n}>\n\nexport default function FormField({ label, error, children }: FormFieldProps) {\n  return (\n    <label className=\"form-field\">\n      {label && <span>{label}</span>}\n      {children}\n      <ErrorMessage error={error} className=\"ml-2\" />\n    </label>\n  )\n}\n", "import { useEffect, useRef, useState } from 'react'\nimport { FiImage } from 'react-icons/fi'\nimport ReactLoading from 'react-loading'\n\ntype ImageToSend = { b64: string; name: string }\n\ntype ImageSelectorProps = {\n\tloadedImage?: ImageToSend\n\tonImageLoading: (isLoading: boolean) => void\n\tonImageLoaded: (image?: ImageToSend) => void\n}\n\nasync function getCanvasImageSizeInBytes(\n\tcanvas: HTMLCanvasElement,\n): Promise<number> {\n\treturn new Promise(r => {\n\t\tcanvas.toBlob(b => r(b?.size ?? 0))\n\t})\n}\n\nfunction loadImageToCanvas(\n\tcanvas: HTMLCanvasElement,\n\timage: HTMLImageElement,\n\twidth: number = image.width,\n\theight: number = image.height,\n) {\n\t// Redimensionne le canvas virtuel aux dimension souhait\u00E9es\n\tcanvas.width = width\n\tcanvas.height = height\n\n\t// Affiche l'image sur le canvas\n\tcanvas.getContext('2d')?.drawImage(image, 0, 0, width, height)\n}\n\nfunction getCappedDimensions(capSize: number, width: number, height: number) {\n\tlet newWidth = width\n\tlet newHeight = height\n\n\tif (width > capSize || (capSize && height)) {\n\t\tif (width > height) {\n\t\t\tnewHeight = height * (capSize / width)\n\t\t\tnewWidth = capSize\n\t\t} else {\n\t\t\tnewWidth = width * (capSize / height)\n\t\t\tnewHeight = capSize\n\t\t}\n\t}\n\treturn [newWidth, newHeight]\n}\n\nasync function getBase64FromFile(\n\tfile: File,\n\tcanvas: HTMLCanvasElement,\n): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tlet image = new Image()\n\t\timage.src = URL.createObjectURL(file)\n\t\timage.onload = async () => {\n\t\t\t// We first load the original image into the canvas\n\t\t\tloadImageToCanvas(canvas, image)\n\n\t\t\t// Then we calculate the size in bytes\n\t\t\tlet imageSizeInBytes = await getCanvasImageSizeInBytes(canvas)\n\n\t\t\tlet [width, height] = [image.width, image.height]\n\n\t\t\t// While the file size is > 3Mb...\n\t\t\twhile (imageSizeInBytes >= 3000000) {\n\t\t\t\t// We try with a smaller version of the picture\n\t\t\t\t;[width, height] = getCappedDimensions(\n\t\t\t\t\twidth * 0.8,\n\t\t\t\t\timage.width,\n\t\t\t\t\timage.height,\n\t\t\t\t)\n\n\t\t\t\tconsole.log(\n\t\t\t\t\t'Image too big (',\n\t\t\t\t\timageSizeInBytes,\n\t\t\t\t\t'B), trying with a smaller version (',\n\t\t\t\t\twidth,\n\t\t\t\t\t'x',\n\t\t\t\t\theight,\n\t\t\t\t\t')',\n\t\t\t\t)\n\n\t\t\t\tloadImageToCanvas(canvas, image, width, height)\n\t\t\t\timageSizeInBytes = await getCanvasImageSizeInBytes(canvas)\n\t\t\t}\n\n\t\t\tresolve(canvas.toDataURL(file.type))\n\t\t}\n\n\t\timage.onerror = reject\n\t})\n}\n\nexport default function ImageSelector({\n\tonImageLoaded,\n\tonImageLoading,\n\tloadedImage,\n}: ImageSelectorProps) {\n\tconst [imageIsProcessing, setImageIsProcessing] = useState(false)\n\tconst canvasRef = useRef<HTMLCanvasElement>(null)\n\tconst imageInputRef = useRef<HTMLInputElement>(null)\n\n\tuseEffect(() => {\n\t\tonImageLoading(imageIsProcessing)\n\t}, [imageIsProcessing])\n\n\tasync function dataToByteArray(files: FileList | null) {\n\t\tif (!canvasRef.current) {\n\t\t\treturn\n\t\t}\n\n\t\tif (files?.[0]) {\n\t\t\tsetImageIsProcessing(true)\n\t\t\tlet b64 = await getBase64FromFile(files[0], canvasRef.current)\n\t\t\tonImageLoaded({\n\t\t\t\tb64,\n\t\t\t\tname: files[0].name,\n\t\t\t})\n\t\t\tsetImageIsProcessing(false)\n\t\t} else {\n\t\t\tcanvasRef.current.width = 0\n\t\t\tcanvasRef.current.height = 0\n\t\t\tonImageLoaded(undefined)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<canvas\n\t\t\t\tclassName={`w-full mb-5 ${\n\t\t\t\t\tloadedImage && !imageIsProcessing ? '' : 'hidden'\n\t\t\t\t}`}\n\t\t\t\tref={canvasRef}></canvas>\n\n\t\t\t<input\n\t\t\t\tref={imageInputRef}\n\t\t\t\thidden\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tonChange={e => dataToByteArray(e.target.files)}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"sheika button flex justify-center mb-5\"\n\t\t\t\tonClick={() => imageInputRef.current?.click()}>\n\t\t\t\t{imageIsProcessing ? (\n\t\t\t\t\t<ReactLoading\n\t\t\t\t\t\ttype=\"spinningBubbles\"\n\t\t\t\t\t\tclassName=\"mr-3\"\n\t\t\t\t\t\tcolor=\"var(--primary-500)\"\n\t\t\t\t\t\theight=\"1.5rem\"\n\t\t\t\t\t\twidth=\"1.5rem\"\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<FiImage size=\"1.5rem\" className=\"mr-3\" />\n\t\t\t\t)}\n\n\t\t\t\t{loadedImage?.name ?? 'Change picture'}\n\t\t\t</button>\n\t\t</>\n\t)\n}\n", "import { Entry, Prisma } from '@prisma/client'\n\nexport type EntryInUpdate = Pick<Entry, 'title' | 'content' | 'slug'>\n\nexport function getPrismaSelectEntryInUpdate() {\n  return Prisma.validator<Prisma.EntrySelect>()({\n    slug: true,\n    title: true,\n    content: true,\n  })\n}\n", "import { User } from '@prisma/client'\nimport { useState } from 'react'\nimport { FiEdit3, FiTrash } from 'react-icons/fi'\nimport {\n\tLink,\n\tLinksFunction,\n\tLoaderFunction,\n\tMetaFunction,\n\tredirect,\n\tShouldReloadFunction,\n\tuseLoaderData,\n\tuseTransition,\n} from 'remix'\nimport { deserialize, serialize } from 'superjson'\nimport { z } from 'zod'\nimport SheikahLogo from '~/components/sheika-logo'\nimport { deleteAction } from '~/features/entries/api/delete.server'\nimport CommentTextArea from '~/features/entries/components/comment-text-area'\nimport Comments from '~/features/entries/components/comments'\nimport EntryDeleteModal from '~/features/entries/components/entry-delete-modal'\nimport HeartButton from '~/features/entries/components/heart-button'\nimport ImageDisplay from '~/features/entries/components/image-display'\nimport {\n\tEntryInPage,\n\tgetPrismaSelectEntryInPage,\n} from '~/features/entries/types/entry-in-page'\nimport useCurrentUser from '~/hooks/useCurrentUser'\nimport entryStylesheet from '~/styles/entry.css'\nimport formsStylesheet from '~/styles/forms.css'\nimport { displayDateTime } from '~/utils/date.utils'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\nimport { pictures } from '~/utils/storage.server'\n\nexport let links: LinksFunction = () => [\n\t{ rel: 'stylesheet', href: entryStylesheet },\n\t{ rel: 'stylesheet', href: formsStylesheet },\n]\n\nexport let meta: MetaFunction = ({ data }) => {\n\tlet entry = deserialize<EntryInPage>(data)\n\n\treturn {\n\t\ttitle: `${entry.title} | Sheikah Diary`,\n\t}\n}\n\n// The like action does a put and handle the ui itself, no need to reload\nexport let unstable_shouldReload: ShouldReloadFunction = ({ submission }) =>\n\tsubmission?.method != 'PUT'\n\nexport let loader: LoaderFunction = async ({ params, request }) => {\n\tlet slug = z.string().parse(params?.slug)\n\n\tlet entry = await db.entry.findFirst({\n\t\tselect: getPrismaSelectEntryInPage(),\n\t\twhere: {\n\t\t\tslug,\n\t\t},\n\t})\n\n\tif (entry == null) {\n\t\treturn redirect('/app/entries')\n\t}\n\n\tlet result: EntryInPage = {\n\t\t...entry,\n\t\tpictures: await Promise.all(\n\t\t\tentry.pictures.map(async p => ({\n\t\t\t\tfile: (await pictures.getPublicUrl(p.file).publicURL) ?? '',\n\t\t\t\tpreview: (await pictures.getPublicUrl(p.preview).publicURL) ?? 'undefined',\n\t\t\t})),\n\t\t),\n\t}\n\n\treturn serialize(result)\n}\n\nexport let action = deleteAction\n\nexport default function EntriesByIdPage() {\n\tlet {\n\t\tid,\n\t\tslug,\n\t\ttitle,\n\t\tcontent,\n\t\tcreatedAt,\n\t\tuser,\n\t\tpictures,\n\t\tcomments,\n\t\tlikedBy,\n\t\t_count: { likedBy: likedByCount },\n\t}: EntryInPage = deserialize(useLoaderData())\n\n\tlet currentUser = useCurrentUser()\n\n\tconst [showDeleteModal, setShowDeleteModal] = useState(false)\n\n\t// Original value of the like the user gave. Useful to compute numbers of like later\n\tconst userHasLiked = currentUser\n\t\t? likedBy.some(l => l.id == currentUser?.id)\n\t\t: false\n\n\t// number of likes from the db, minus the user like\n\tconst likes = userHasLiked ? likedByCount - 1 || 0 : likedByCount\n\n\tlet transition = useTransition()\n\n\treturn (\n\t\t<article>\n\t\t\t{pictures.map(pic => (\n\t\t\t\t<link rel=\"preload\" as=\"image\" href={pic.file} />\n\t\t\t))}\n\t\t\t<div className=\"column\">\n\t\t\t\t<section className=\"flex flex-col\">\n\t\t\t\t\t<div className=\"flex justify-center space-x-1 mb-3\">\n\t\t\t\t\t\t<h1 className=\"font-bold\">{title}</h1>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\tby{' '}\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tclassName=\"underline underline-offset-2 hover:underline-offset-4\"\n\t\t\t\t\t\t\t\tto={`/app/users/${user.username}`}>\n\t\t\t\t\t\t\t\t{user.username}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ImageDisplay pictures={pictures} />\n\t\t\t\t\t<small className=\"text-center opacity-70\">\n\t\t\t\t\t\t{displayDateTime(createdAt)}\n\t\t\t\t\t</small>\n\t\t\t\t</section>\n\t\t\t\t{!content && currentUser?.id != user.id ? null : (\n\t\t\t\t\t<section className=\"flex flex-col mb-5\">\n\t\t\t\t\t\t{content ? (\n\t\t\t\t\t\t\t<fieldset className=\"mt-3 pb-10 mb-auto\">\n\t\t\t\t\t\t\t\t<legend>Description</legend>\n\t\t\t\t\t\t\t\t<p>{content}</p>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{!currentUser || currentUser?.id != user.id ? null : (\n\t\t\t\t\t\t\t<fieldset className=\"mt-3\">\n\t\t\t\t\t\t\t\t<legend>Actions</legend>\n\t\t\t\t\t\t\t\t<nav className=\"mt-3 flex justify-center space-x-5\">\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tclassName=\"sheika button flex\"\n\t\t\t\t\t\t\t\t\t\tto={'/app/entries/' + slug + '/update'}>\n\t\t\t\t\t\t\t\t\t\t<FiEdit3 size=\"1.5rem\" className=\"mr-3\" />\n\t\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"sheika button danger flex\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => setShowDeleteModal(true)}>\n\t\t\t\t\t\t\t\t\t\t<FiTrash size=\"1.5rem\" className=\"mr-3\" />\n\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t\t<section>\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<legend>Hearts</legend>\n\t\t\t\t\t\t<div className=\"flex justify-center w-full p-5\">\n\t\t\t\t\t\t\t<HeartButton\n\t\t\t\t\t\t\t\treadonly={!currentUser}\n\t\t\t\t\t\t\t\tslug={slug}\n\t\t\t\t\t\t\t\toriginalLikes={likes}\n\t\t\t\t\t\t\t\toriginalUserHasLiked={userHasLiked}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<fieldset className=\"w-full\">\n\t\t\t\t\t\t<legend>Comments ({comments.length})</legend>\n\t\t\t\t\t\t{currentUser ? <CommentTextArea slug={slug} /> : null}\n\t\t\t\t\t\t<Comments entry={{ comments, slug, id }} />\n\t\t\t\t\t</fieldset>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<EntryDeleteModal\n\t\t\t\tentryId={id}\n\t\t\t\ttransition={transition}\n\t\t\t\tshow={showDeleteModal}\n\t\t\t\tonCancel={() => setShowDeleteModal(false)}\n\t\t\t/>\n\t\t</article>\n\t)\n}\n", "import { ActionFunction, redirect } from 'remix'\nimport { z } from 'zod'\nimport { db } from '~/utils/db.server'\nimport { pictures } from '~/utils/storage.server'\nimport { parseFormData } from '../../../utils/formdata.utils.server'\n\nlet formValidator = z.object({\n\tid: z.string().uuid().nonempty(),\n})\n\nexport let deleteAction: ActionFunction = async ({ request }) => {\n\tif (request.method != 'DELETE') {\n\t\treturn null\n\t}\n\n\tlet form = await parseFormData(request, formValidator)\n\n\tconsole.log('Request to delete entry', form.id)\n\n\tlet linkedPictures = await db.picture.findMany({\n\t\twhere: {\n\t\t\tentryId: form.id,\n\t\t},\n\t})\n\n\t// This can be done in the bg\n\tpictures.remove(\n\t\tlinkedPictures.flatMap(pic => [pic.file, pic.preview, pic.thumbnail]),\n\t)\n\n\t// We first delete all the pictures\n\tawait db.picture.deleteMany({\n\t\twhere: {\n\t\t\tentryId: form.id,\n\t\t},\n\t})\n\n\t// Then we delete the entry\n\tawait db.entry.delete({\n\t\twhere: {\n\t\t\tid: form.id,\n\t\t},\n\t})\n\n\treturn redirect('/app/entries')\n}\n", "import { Entry } from '@prisma/client'\nimport { useEffect, useRef } from 'react'\nimport { useFetcher } from 'remix'\nimport FormField from '~/components/form-field'\nimport ReactLoading from 'react-loading'\n\nexport default function CommentTextArea({ slug }: { slug: Entry['slug'] }) {\n\tconst fetcher = useFetcher()\n\tconst textAreaRef = useRef<HTMLTextAreaElement>(null)\n\n\tuseEffect(() => {\n\t\tif (fetcher.state == 'idle' && textAreaRef.current) {\n\t\t\ttextAreaRef.current.value = ''\n\t\t}\n\t}, [fetcher.state])\n\n\treturn (\n\t\t<fetcher.Form method=\"post\" action={`/app/entries/${slug}/create-comment`}>\n\t\t\t<FormField label=\"Add a comment\">\n\t\t\t\t<textarea ref={textAreaRef} name=\"body\" rows={5}></textarea>\n\t\t\t</FormField>\n\t\t\t<span className=\"text-danger-500 ml-5\">\n\t\t\t\t{fetcher.data?.body ? fetcher.data.body?._errors : null}\n\t\t\t</span>\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"sheika button float-right flex mr-3 space-x-3\">\n\t\t\t\t{fetcher.submission ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ReactLoading\n\t\t\t\t\t\t\ttype=\"spinningBubbles\"\n\t\t\t\t\t\t\tcolor=\"var(--primary-500)\"\n\t\t\t\t\t\t\theight=\"1.5rem\"\n\t\t\t\t\t\t\twidth=\"1.5rem\"\n\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t<span>Sending...</span>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t'Send your comment'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t</fetcher.Form>\n\t)\n}\n", "import { z } from 'zod'\n\nexport function displayDate(date: Date): string {\n  let d = z.date().parse(date)\n  return `${String(d.getDate()).padStart(2, '0')}/${String(d.getMonth() + 1).padStart(2, '0')}/${d.getFullYear()}`\n}\n\nexport function displayTime(date: Date, displaySeconds = false): string {\n  let d = z.date().parse(date)\n  return (\n    `${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}` +\n    (displaySeconds ? `:${d.getSeconds()}` : '')\n  )\n}\n\nexport function displayDateTime(date: Date, displaySeconds = false): string {\n  let d = z.date().parse(date)\n  return `${displayDate(d)} at ${displayTime(d, displaySeconds)}`\n}\n", "import { displayDateTime } from '~/utils/date.utils'\nimport { EntryInPage } from '../types/entry-in-page'\n\ntype CommentsProps = {\n  entry: Pick<EntryInPage, 'comments' | 'slug'> & { id: string }\n}\n\nexport default function Comments({ entry }: CommentsProps) {\n  return (\n    <>\n      <ul className=\"mb-5\">\n        {entry.comments.map((comment) => (\n          <li className=\"p-5\" key={comment.id}>\n            <strong>\n              {comment.user?.username}\n              <span className=\"text-sm\">\n                {comment.createdAt\n                  ? ` (${displayDateTime(comment.createdAt)})`\n                  : null}\n              </span>\n            </strong>\n            <br />\n            <p className=\"mt-2 ml-5\">{comment.body}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n", "import { useEffect, useState } from 'react'\nimport { Form } from 'remix'\nimport ReactLoading from 'react-loading'\nimport { Transition } from '@remix-run/react/transition'\n\ntype EntryDeleteModalProps = {\n  entryId: string\n  transition: Transition\n  show?: boolean\n  onCancel?: () => void\n  onDelete?: () => void\n}\n\nexport default function EntryDeleteModal({\n  entryId,\n  show = false,\n  transition,\n  onCancel,\n  onDelete,\n}: EntryDeleteModalProps) {\n  const [opacity, setOpacity] = useState(show ? 'opacity-100' : 'opacity-0')\n  const [display, setDisplay] = useState(show ? 'flex' : 'hidden')\n\n  useEffect(() => {\n    if (show) {\n      setDisplay('flex')\n      setTimeout(() => setOpacity('opacity-100'))\n    } else {\n      setOpacity('opacity-0')\n      setTimeout(() => setDisplay('hidden'), 200)\n    }\n  }, [show])\n\n  return (\n    <div\n      onClick={() => onCancel?.()}\n      className={`backdrop absolute bg-black bg-opacity-30 top-0 left-0 w-full h-full transition-opacity ${display} ${opacity}`}\n    >\n      <div className=\"mt-auto mb-20 mx-5 md:mx-auto w-full flex flex-wrap-reverse justify-center\">\n        <div className=\"w-full md:w-1/2 h-36 bg-black bg-opacity-60 text-white rounded-full px-12 flex justify-center items-center font-bold text-xl\">\n          <span>\n            Are you sure you want to delete this entry ? <br />\n            This is <em> permanent !</em>\n          </span>\n        </div>\n        <aside className=\"w-44 ml-auto mb-5 md:ml-5 md:my-auto space-y-5\">\n          <Form method=\"delete\">\n            <input type=\"hidden\" name=\"id\" value={entryId} readOnly />\n            <button\n              type=\"submit\"\n              onClick={(e) => {\n                e.stopPropagation()\n                onDelete?.()\n              }}\n              className=\"w-full h-16 bg-black bg-opacity-60 text-white rounded-full flex justify-center items-center font-bold text-xl\"\n            >\n              {transition.submission ? (\n                <ReactLoading\n                  type=\"spinningBubbles\"\n                  color=\"white\"\n                  height=\"1.5rem\"\n                  width=\"1.5rem\"\n                />\n              ) : (\n                'Delete.'\n              )}\n            </button>\n          </Form>\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              e.stopPropagation()\n              onCancel?.()\n            }}\n            className=\"w-full h-16 bg-black bg-opacity-60 text-white rounded-full flex justify-center items-center font-bold text-xl\"\n          >\n            Don't delete.\n          </button>\n        </aside>\n      </div>\n    </div>\n  )\n}\n", "import { Entry } from '@prisma/client'\nimport { useEffect, useState } from 'react'\nimport { useFetcher } from 'remix'\nimport HeartIcon from '~/components/heart-icon'\n\ntype HeartButtonProps = {\n\tslug: Entry['slug']\n\toriginalUserHasLiked: boolean\n\toriginalLikes: number\n\treadonly?: boolean\n}\n\n// Optimistic like button, directly updates its value then update again if the server was not ok\nexport default function HeartButton({\n\tslug,\n\toriginalUserHasLiked,\n\toriginalLikes,\n\treadonly = true,\n}: HeartButtonProps) {\n\tlet fetcher = useFetcher()\n\n\tconst [userHasLiked, setUserHasLiked] = useState(originalUserHasLiked)\n\n\t// Actual number of likes to display\n\tconst [likes, setLikes] = useState(\n\t\toriginalUserHasLiked ? originalLikes + 1 : originalLikes,\n\t)\n\n\tuseEffect(() => {\n\t\tsetLikes(userHasLiked ? originalLikes + 1 : originalLikes)\n\t}, [userHasLiked])\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tuserHasLiked != undefined &&\n\t\t\tfetcher.data &&\n\t\t\tuserHasLiked != fetcher.data\n\t\t) {\n\t\t\tsetUserHasLiked(fetcher.data)\n\t\t}\n\t}, [fetcher.data])\n\n\tuseEffect(() => {\n\t\tif (userHasLiked != undefined && fetcher.state == 'submitting') {\n\t\t\tsetUserHasLiked(!userHasLiked)\n\t\t}\n\t}, [fetcher.state])\n\n\tif (readonly) {\n\t\treturn (\n\t\t\t<div className=\"flex flex-col items-center\">\n\t\t\t\t<HeartIcon className=\"w-10 h-10 filter text-danger-500 drop-shadow-danger\" />\n\t\t\t\t<span className=\"text-lg\">{likes}</span>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<fetcher.Form method=\"put\" action={`/app/entries/${slug}/like`}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tname=\"alreadyLiked\"\n\t\t\t\t\treadOnly\n\t\t\t\t\tvalue={userHasLiked ? 'true' : 'false'}\n\t\t\t\t/>\n\t\t\t\t<div className=\"flex flex-col items-center\">\n\t\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t\t<HeartIcon\n\t\t\t\t\t\t\tclassName={`w-10 h-10 filter ${\n\t\t\t\t\t\t\t\tuserHasLiked\n\t\t\t\t\t\t\t\t\t? 'text-danger-500 drop-shadow-danger hover:text-danger-300'\n\t\t\t\t\t\t\t\t\t: 'text-black drop-shadow-primary hover:text-danger-900'\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</button>\n\t\t\t\t\t<span className=\"text-lg\">{likes}</span>\n\t\t\t\t</div>\n\t\t\t</fetcher.Form>\n\t\t)\n\t}\n}\n", "export default function HeartIcon({\n    className = 'w-full h-full',\n}: {\n    className?: string\n}) {\n    return (\n        <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 78.76\">\n            <path d=\"M93.86,49A21,21,0,1,0,64.12,19.26L50,33.38,79.75,63.13Z\" transform=\"translate(0 -13.13)\" fill=\"currentColor\" />\n            <path d=\"M35.88,19.26a21.09,21.09,0,0,0-29.74,0h0A21.08,21.08,0,0,0,6.14,49L20.25,63.13,50,33.38Z\" transform=\"translate(0 -13.13)\" fill=\"currentColor\" />\n            <path d=\"M50,33.38,16.68,59.55,48.32,91.19a2.37,2.37,0,0,0,3.36,0L82.45,60.42Z\" transform=\"translate(0 -13.13)\" fill=\"currentColor\" />\n        </svg>\n    )\n}", "import { useState } from 'react'\nimport SheikahLogo from '~/components/sheika-logo'\nimport { EntryInPage } from '../types/entry-in-page'\n\ninterface ImageDisplayProps {\n\tpictures: EntryInPage['pictures']\n}\n\nexport default function ImageDisplay({ pictures }: ImageDisplayProps) {\n\tif (!pictures || pictures.length <= 0) {\n\t\treturn (\n\t\t\t<SheikahLogo className=\"mx-auto w-full h-full border border-primary-500 text-primary-500\" />\n\t\t)\n\t}\n\n\tconst [fullscreen, setFullscreen] = useState(false)\n\n\treturn (\n\t\t<>\n\t\t\t<button onClick={() => setFullscreen(true)}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={pictures[0].preview}\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tclassName=\"mx-auto w-full max-w-2xl h-full border border-primary-500 text-primary-500\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t{fullscreen ? (\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => setFullscreen(false)}\n\t\t\t\t\tclassName=\"fixed z-20 top-0 left-0 w-screen h-screen bg-black bg-opacity-50 object-contain px-1 md:px-5 lg:px-10 xl:px-20\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"w-full h-full bg-contain bg-no-repeat bg-center\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${pictures[0].file})`,\n\t\t\t\t\t\t}}></div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</>\n\t)\n}\n", "export default function SheikahLogo({\n  className = 'w-full h-full',\n}: {\n  className?: string\n}) {\n  return (\n    <svg\n      className={className}\n      width=\"1706.7\"\n      height=\"1706.7\"\n      enableBackground=\"new 0 0 1842.5 1842.5\"\n      version=\"1.1\"\n      viewBox=\"0 0 1706.7 1706.7\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g transform=\"translate(-89.328 -54.679)\">\n        <path\n          d=\"m993.49 675.2c-2.228-0.27005-4.726-0.54011-7.1565-0.94519-9.2494-1.5528-18.566-2.5655-27.951-3.1731-10.667-0.67514-21.334-0.54011-32.001 0.27005-7.5615 0.54011-15.056 1.5528-22.482 2.8356-2.4305 0.40508-4.861 0.87768-7.359 0.87768-4.726 0-6.2112-1.6203-5.8062-6.3463 0.20254-2.498 0.94519-4.861 1.6203-7.224 3.9158-13.368 8.4392-26.465 14.448-39.09 2.9031-6.1437 5.4686-12.422 8.2367-18.634 4.3884-9.992 9.4519-19.646 14.515-29.233 2.9706-5.6036 5.9412-11.275 9.3169-16.608 0.87767-1.3503 1.7554-2.7005 2.9706-3.7808 2.2955-2.0254 4.5909-2.0929 6.9539-0.13503 0.81016 0.67513 1.5528 1.4853 2.2279 2.2955 4.6584 5.8062 8.5742 12.22 11.612 18.971 4.6584 10.33 8.7092 20.929 12.49 31.529 6.6838 18.701 14.38 36.997 22.279 55.159 1.0802 2.498 1.9579 4.996 2.633 7.629 0.2026 0.74265 0.2701 1.4853 0.3376 2.228 0.067 1.3503-0.60763 2.2279-1.8904 2.7005-0.40508 0.13502-0.81016 0.33756-1.2152 0.40508-1.1477 0.13503-2.2955 0.13503-3.7808 0.27005zm170.94-49.285c-0.2026-3.7132-1.8904-4.9285-5.5361-4.3209-1.1478 0.20254-2.2955 0.54011-3.4432 0.87768-10.06 2.8356-19.444 7.1564-28.221 12.693-12.152 7.629-24.17 15.461-36.187 23.292-8.3042 5.4011-16.541 10.937-24.845 16.406-2.633 1.7554-4.996 3.7808-6.7514 6.4138-1.8903 2.8356-1.8903 4.6584 0.3376 7.2915 2.0929 2.5655 4.7935 4.2534 7.8991 5.4011 3.8483 1.3503 7.6965 2.768 11.477 4.3209 15.866 6.5488 30.314 15.528 43.614 26.33 4.0509 3.2406 7.8991 6.7514 11.815 10.127 1.7554 1.4853 3.4432 2.9031 5.5361 3.9158 3.7808 1.8904 6.3463 1.0127 8.2367-2.768 0.9452-1.8904 1.4853-3.8483 1.7553-5.8737 1.1478-7.1564 2.228-14.313 3.2407-21.469 1.2152-8.5742 2.498-17.081 4.2533-25.52 1.8229-8.6417 3.3082-17.351 4.3209-26.195 0.6076-5.2661 1.1477-10.532 1.6203-15.798 0.4051-4.0508 0.6076-8.1691 0.8777-12.017 0-1.2152 0.067-2.1604 0-3.1056zm-431.07 66.771v14.583c-0.0675 13.84-0.13503 27.613-0.20254 41.453 0 1.4178 0.0675 2.8356 0.13503 4.1858 0.0675 0.74265 0.20254 1.4853 0.47259 2.2279 0.54011 1.4853 1.4853 2.0929 3.0381 1.8229 0.81016-0.13503 1.6878-0.40508 2.4305-0.74265 1.8904-0.87768 3.5107-2.0929 4.996-3.5107 7.0889-6.4813 14.313-12.828 21.739-18.971 12.963-10.735 27.005-19.646 42.466-26.33 3.4432-1.4853 6.8864-3.0381 10.397-4.5234 3.5782-1.5528 7.0214-3.3082 10.397-5.1985 0.5401-0.33757 1.1477-0.67513 1.6203-1.0802 1.2152-1.0127 1.3503-2.0929 0.60762-3.4432-0.74265-1.2152-1.8229-2.0929-2.9706-2.9031-8.6417-6.4138-17.351-12.828-25.993-19.241-3.8483-2.8356-7.764-5.4686-11.41-8.5067-14.515-12.22-30.381-22.347-46.989-31.461-1.8904-1.0127-3.8483-1.9579-5.8737-2.7005-2.2955-0.87768-4.0508 0.13502-4.6584 2.498-0.20254 0.81016-0.27005 1.6878-0.27005 2.5655-0.81017 15.731-0.67514 31.529-0.13503 47.259l0.40508 11.95c-0.13503 0.0675-0.13503 0.0675-0.20254 0.0675zm164.87 521.47c0.40509 5.4011 0.94519 10.735 2.363 16.001 3.5107 12.558 9.7895 23.427 19.646 32.136 4.3209 3.7807 9.1818 6.8189 14.65 8.7768 4.3884 1.5528 8.9793 2.4304 13.638 2.0929 6.4813-0.4726 12.422-2.6331 17.824-6.1438 5.0635-3.2406 9.3169-7.3589 12.963-12.085 5.4686-7.0889 9.3169-14.988 11.95-23.495 1.9579-6.2788 2.9706-12.828 4.0508-19.309 2.0254-12.152 2.228-24.305 0.94519-36.457-1.0802-10.127-2.9706-20.052-5.2661-29.976-4.861-20.659-9.9245-41.318-14.313-62.112-1.4178-6.6839-2.9031-13.3-4.0508-19.984-1.3503-7.9666-2.363-16.001-3.3757-24.035-1.0802-8.6417-2.0929-17.351-3.0381-26.06-0.40508-3.9833-0.60762-7.9666-0.87768-11.95-0.13502-1.6203 0.0675-3.2407 0.54011-4.7935 0.4726-1.5528 1.3503-2.7005 2.9031-3.3081 1.2828-0.4726 2.633-0.8777 4.0508-1.2153l27.546-5.8736c19.916-4.3884 39.023-10.87 57.319-19.849 30.854-15.056 57.049-35.985 79.396-61.842 11.342-13.098 21.334-27.14 30.381-41.926 0.8777-1.3503 1.6203-2.7681 2.8356-3.9158 2.7005-2.5655 5.8061-3.5107 9.5194-2.2955 6.2112 2.0254 12.49 2.1605 18.904 0.9452 17.756-3.3082 32.136-16.473 36.93-33.824 2.498-8.9118 2.3629-17.891 0.27-26.87-1.0127-4.2533-2.5655-8.2366-4.7934-11.95-1.8904-3.1731-4.2534-6.0087-7.224-8.2366-1.8228-1.3503-3.8483-2.4305-6.0087-3.1056-0.8777-0.27006-1.4853 0.20254-1.3503 1.1477 0.1351 1.4178 0.3376 2.768 0.5402 4.1858 0.8101 5.6711 0.9451 11.41 0.27 17.148-0.4726 3.7807-1.4178 7.4265-3.1056 10.87-3.3082 6.8188-8.6418 11.207-16.001 13.098-5.3336 1.4178-10.667 1.2827-16.068 0.27-7.1565-1.3502-13.908-3.9157-20.187-7.6965-5.6711-3.3757-10.937-7.2915-16.068-11.41-6.3463-5.0635-12.625-10.127-19.106-15.056-18.094-13.908-37.132-26.398-57.522-36.66-18.431-9.2494-37.268-17.554-56.981-23.832-18.161-5.7386-36.727-9.5194-55.834-10.532-11.882-0.67513-23.765-0.20254-35.58 1.2828-11.882 1.4853-23.63 3.9158-35.175 7.224-46.044 13.368-87.565 35.107-124.22 66.096-8.6417 7.359-17.756 14.11-27.478 19.984-5.266 3.1731-10.802 5.8737-16.676 7.8316-6.8189 2.2954-13.773 3.5782-20.997 2.363-9.3169-1.5529-15.798-6.5489-19.174-15.393-1.5528-3.9833-2.1604-8.1017-2.2955-12.355-0.20254-5.4011 0.54011-10.802 1.4853-16.068 0.0675-0.54011 0.20254-1.0802 0.27006-1.6203 0.0675-0.67513-0.74265-1.2152-1.3503-1.0127-0.33756 0.13503-0.60762 0.20254-0.87767 0.40508-11.275 6.0087-17.959 15.258-19.646 27.951-0.94519 6.8189-0.27006 13.57 1.0802 20.254 0.67514 3.5107 1.4853 6.9539 3.1731 10.194 2.363 4.591 5.3336 8.6418 9.1818 12.017 8.7092 7.7641 18.971 11.747 30.584 12.558 5.5361 0.405 11.005 0.068 16.338-1.5528 2.4305-0.7427 4.1858 0 5.7386 1.6878 0.74265 0.8102 1.4178 1.6878 1.9579 2.5655 1.0802 1.6203 2.0929 3.2407 3.1056 4.9285 3.9833 6.8189 8.0341 13.57 12.355 20.119 11.68 17.689 25.453 33.554 41.386 47.462 8.8443 7.7641 18.499 14.516 28.221 21.199 7.0889 4.9285 14.583 9.2493 22.347 13.03 15.326 7.494 31.326 13.3 47.732 18.161 12.76 3.7133 25.588 7.0215 38.753 8.7768 1.8904 0.2701 3.8483 0.4726 5.7386 0.8102 4.1183 0.6751 5.9412 2.1604 5.4011 7.3589-1.1477 10.6-1.9579 21.267-2.9031 31.934-0.40509 4.726-0.81017 9.4519-1.4178 14.178-1.1477 9.3169-2.498 18.634-4.3209 27.816-1.7554 9.1143-3.4432 18.229-5.6036 27.275-4.0508 17.081-8.1691 34.162-12.355 51.243-3.0381 12.422-4.6584 25.048-4.5909 37.335 0.4726 8.0341 0.94519 15.528 1.5528 23.09zm154-384.35c-0.068-3.3082-0.6751-6.1438-1.4853-8.9793-1.2828-4.3884-2.9031-8.5743-5.0635-12.625-3.9158-7.3589-8.3042-14.38-13.435-20.929-8.2367-10.532-18.161-19.039-30.044-25.183-4.861-2.498-9.9246-4.7935-14.853-7.1564-0.67514-0.33756-1.3503-0.60762-2.0254-1.0127-0.20254-0.13503-0.33757-0.60762-0.27005-0.81016 0.0675-0.27006 0.40508-0.54011 0.67513-0.60762 0.60762-0.27006 1.2828 0 1.8904 0.13502 13.773 2.5655 26.87 7.0889 39.563 13.03 12.558 5.8737 24.372 12.963 35.782 20.794 12.22 8.3716 24.035 17.283 35.985 25.925 6.5488 4.7259 13.165 9.3843 19.849 13.975 8.3042 5.6711 16.811 10.937 25.79 15.528 2.633 1.3503 2.7681 1.8904 1.6879 4.5909-0.3376 0.8102-0.6752 1.5528-1.1478 2.363-6.4138 11.68-13.233 23.022-21.132 33.689-8.9118 12.085-19.241 22.752-31.056 32.002-5.8737 4.5909-11.747 9.1818-17.756 13.503-6.3463 4.5234-13.098 8.3042-19.916 12.152-19.444 10.87-40.103 18.431-61.91 23.09-0.40508 0.067-0.8777 0.135-1.2828 0.135-0.13502 0-0.33756-0.27-0.40508-0.405-0.0675-0.1351 0-0.4726 0.13503-0.5401 0.40508-0.3376 0.8777-0.6077 1.3503-0.8777 1.7554-0.8777 3.5107-1.6879 5.1985-2.5655 6.0762-3.1057 11.95-6.4138 17.621-10.262 7.7641-5.2661 14.448-11.68 19.849-19.309 1.8904-2.633 3.7132-5.3335 5.4686-8.0341 4.5234-6.9539 7.2915-14.65 8.9118-22.752 0.4051-2.0929 0.8101-4.2534 1.1477-6.3463 0.135-0.7427 0.2026-1.4853 0.2026-2.2279 0-2.228-1.0127-3.6458-2.9706-4.0509-2.228-0.4726-4.2534 0.4051-5.1311 2.363-0.4051 0.8777-0.6076 1.8229-0.8101 2.7681-1.3503 6.9539-4.1184 13.368-7.8316 19.376-3.3082 5.4686-7.2915 10.465-11.747 15.056-11.14 11.545-23.832 20.929-38.415 27.68-5.6711 2.633-11.41 5.131-17.554 6.4813-7.8316 1.7554-15.798 2.2955-23.832 1.7554-6.8864-0.4726-13.773-1.2828-20.457-3.0381-23.495-6.0763-43.344-17.891-58.534-37.065-5.7386-7.2239-10.127-15.258-13.233-23.967-1.0127-2.8355-2.0929-5.6711-3.5107-8.3717-0.60763-1.0802-1.3503-1.9578-2.633-2.0929-1.7554-0.2025-3.1731 0.6076-3.9158 2.228-0.60762 1.2827-0.74265 2.7005-0.54011 4.1183 1.0127 7.5615 2.9031 14.853 6.4138 21.604 4.7935 9.2494 11.005 17.554 17.959 25.25 3.5107 3.8482 7.629 7.0214 11.882 9.9245 5.9412 3.9833 12.22 7.359 18.431 10.735 1.1477 0.6077 2.7681 0.6752 3.0381 2.4305-1.2828 0.6752-2.498 0.067-3.7132-0.135-12.152-2.1604-24.035-5.2661-35.512-9.7895-7.4265-2.9031-14.583-6.4813-21.267-10.87-6.8864-4.4559-13.84-8.8442-20.659-13.368-3.5782-2.363-7.0889-4.861-10.6-7.4265-10.6-7.629-19.916-16.608-27.816-26.938-6.8189-8.9118-13.503-17.959-20.119-27.005-2.8356-3.8483-5.1986-7.8991-7.359-12.152-0.87768-1.7553-1.4178-3.5782-1.8904-5.4686-0.47259-1.8903-0.0675-3.6457 1.0802-5.1985 0.87767-1.0802 1.8229-2.1604 2.8356-3.1056 31.866-29.706 66.636-55.159 106.4-73.522 11.207-5.131 22.617-9.6544 34.499-12.895 2.1604-0.60762 4.3884-1.0802 6.6163-1.4853 0.81016-0.20254 1.6878-0.20254 2.5655-0.20254 0.40508 0 0.87767 0.0675 1.0127 0.54011 0.20254 0.60762-0.13503 1.0127-0.60762 1.3503-1.3503 0.94519-2.8356 1.5528-4.3209 2.228-17.148 7.0214-31.326 18.161-43.006 32.406-9.3169 11.275-15.258 24.237-18.364 38.483-0.60762 2.8356-1.0127 5.7387-0.87767 8.7093 0.13502 1.9579 0.87767 3.4432 2.7005 4.4559 1.7554 0.8777 3.2406 0.27 4.0508-1.3503 0.40508-0.8777 0.67514-1.8229 0.94519-2.768 1.8229-6.1438 3.9833-12.085 6.6163-17.891 5.4011-12.017 12.422-22.955 21.537-32.474 8.5742-8.9793 18.499-16.203 29.841-21.402 4.5909-2.1604 9.1818-4.3209 13.975-5.8737 5.3336-1.7554 10.87-2.7681 16.473-3.1056 4.9285-0.27005 9.9245-0.40508 14.92-0.13502 19.039 0.87767 36.39 6.6163 52.188 17.283 13.908 9.3844 24.98 21.537 33.757 35.782 3.9833 6.4138 7.4265 13.165 10.465 20.119 0.4051 1.0127 0.8777 1.9579 1.3503 2.9031 0.6076 1.1477 1.4853 1.8229 2.9031 1.6203 1.6878-0.2025 3.0381-1.2827 3.3082-2.7005 0.135-0.9452 0.135-1.6879 0.135-2.0929zm4.0508 30.044c-0.2701-3.2407-2.2955-6.0087-5.4011-6.8864-2.9031-0.8102-5.9412-0.5401-7.6965 3.3757-0.7427 1.5528-1.0802 3.3081-1.0802 4.996 0.135 4.4559 3.7132 8.7092 9.7894 7.494 1.6879-0.3376 2.8356-1.4178 3.6458-2.9706 0.6751-1.4178 0.8101-2.9031 0.8101-4.3884-0.068-0.5401-0.068-1.0802-0.068-1.6203zm-211.93 10.802c3.3082-1.2153 5.0635-5.0636 3.9833-8.5068-1.1477-3.5107-4.1858-5.401-8.0341-4.9284-3.6457 0.405-6.2788 3.2406-6.4138 6.9539-0.13503 4.6584 2.0254 7.1564 6.9539 7.2239 1.0802 0.135 2.2955-0.2701 3.5107-0.7426zm167.7-39.496c-10.397-25.723-29.368-40.643-56.981-44.356-8.3717-1.1477-16.811-0.67513-25.115 1.1477-18.026 3.8482-32.744 13.03-43.546 28.086-6.8189 9.4519-10.87 20.052-12.49 31.596-1.4178 10.06-1.0802 20.052 1.8229 29.841 5.7386 19.511 17.756 34.094 35.445 43.884 15.866 8.7768 32.947 11.207 50.77 8.0341 13.098-2.2954 24.642-7.8991 34.297-17.013 14.515-13.773 21.199-30.854 21.199-50.703 0.067-10.6-1.4853-20.794-5.4011-30.516zm-67.379 52.323c-3.1731-0.135-6.2788-0.5401-9.2494-1.6203-5.3336-1.8904-9.3844-5.2661-11.68-10.532-2.7005-6.0762-3.8483-12.422-2.0254-18.904 2.8356-9.992 9.722-15.731 19.781-17.824 3.3757-0.6751 6.8189-0.7426 10.33-0.135 7.359 1.2828 12.828 5.131 15.933 11.882 3.7132 7.9666 3.7808 16.203-0.33757 24.035-4.7935 9.1143-12.558 13.3-22.752 13.098z\"\n          fill=\"currentColor\"\n          strokeWidth=\".67514\"\n        />\n      </g>\n    </svg>\n  )\n}\n", "import { Entry, Picture, Prisma, User, Comment } from '@prisma/client'\n\nexport type EntryInPage = Pick<\n  Entry,\n  'id' | 'slug' | 'title' | 'content' | 'createdAt'\n> & {\n  user: Pick<User, 'id' | 'username'>\n  pictures: Pick<Picture, 'file' | 'preview'>[]\n  comments: (Pick<Comment, 'id' | 'body' | 'createdAt'> & { user: User })[]\n  likedBy: { id: User['id'] }[]\n  _count: { likedBy: number }\n}\n\nexport function getPrismaSelectEntryInPage() {\n  return Prisma.validator<Prisma.EntrySelect>()({\n    id: true,\n    slug: true,\n    title: true,\n    content: true,\n    createdAt: true,\n    user: {\n      select: {\n        id: true,\n        username: true,\n      },\n    },\n    pictures: {\n      select: {\n        file: true,\n        preview: true,\n      },\n    },\n    comments: {\n      select: {\n        id: true,\n        body: true,\n        user: true,\n        createdAt: true,\n      },\n      orderBy: {\n        createdAt: 'desc' as Prisma.SortOrder,\n      },\n    },\n    likedBy: {\n      select: {\n        id: true,\n      },\n    },\n    _count: {\n      select: {\n        likedBy: true,\n      },\n    },\n  })\n}\n", "import { User } from '@prisma/client'\nimport { useMatches } from 'remix'\n\nexport default function useCurrentUser(): User {\n\tlet matches = useMatches()\n\n\tlet {\n\t\tdata: { currentUser },\n\t} = matches.find(m => 'currentUser' in (m.data ?? {})) ?? {\n\t\tdata: { currentUser: undefined },\n\t}\n\n\treturn currentUser\n}\n", "import { ActionFunction } from 'remix'\nimport { likeAction } from '~/features/entries/api/like.server'\n\nexport let action: ActionFunction = (args) =>  likeAction(args)\n", "import { Prisma } from '@prisma/client'\nimport { ActionFunction, redirect } from 'remix'\nimport { z } from 'zod'\nimport { db } from '~/utils/db.server'\nimport { parseFormData } from '../../../utils/formdata.utils.server'\nimport { getUser } from '~/utils/session.server'\n\nlet formValidator = z.object({\n\talreadyLiked: z.boolean().default(false),\n})\n\nexport let likeAction: ActionFunction = async ({ params, request }) => {\n\tif (!params.slug) {\n\t\treturn null\n\t}\n\n\tconsole.log('Request to like/unlike post', params.slug)\n\n\tlet formData = await parseFormData(request, formValidator)\n\n\tlet user = await getUser(request)\n\n\tif (!user) {\n\t\treturn redirect('/login')\n\t}\n\n\tlet updateAction: {\n\t\t[k in\n\t\t\t| 'connect'\n\t\t\t| 'disconnect']?: Prisma.UserUpdateManyWithoutEntriesInput['connect']\n\t}\n\n\tif (formData.alreadyLiked) {\n\t\tupdateAction = {\n\t\t\tdisconnect: {\n\t\t\t\tid: user.id,\n\t\t\t},\n\t\t}\n\t} else {\n\t\tupdateAction = {\n\t\t\tconnect: {\n\t\t\t\tid: user.id,\n\t\t\t},\n\t\t}\n\t}\n\n\tawait db.entry.update({\n\t\tdata: {\n\t\t\tlikedBy: {\n\t\t\t\t...updateAction,\n\t\t\t},\n\t\t},\n\t\twhere: {\n\t\t\tslug: params.slug,\n\t\t},\n\t})\n\n\treturn !formData.alreadyLiked\n}\n", "import { User } from '@prisma/client'\nimport { FiLogOut } from 'react-icons/fi'\nimport { HiBell, HiCamera, HiHeart } from 'react-icons/hi'\nimport {\n\tForm,\n\tLoaderFunction,\n\tMetaFunction,\n\tNavLink,\n\tOutlet,\n\tredirect,\n\tuseLoaderData,\n} from 'remix'\nimport { deserialize, serialize } from 'superjson'\nimport useCurrentUser from '~/hooks/useCurrentUser'\nimport { db } from '~/utils/db.server'\n\nexport let meta: MetaFunction = ({ data }) => {\n\tlet user = deserialize<Pick<User, 'id' | 'username'>>(data)\n\treturn {\n\t\ttitle: `${user.username}'s Page | Sheikah Diary`,\n\t}\n}\n\nexport let loader: LoaderFunction = async ({ request, params }) => {\n\tif (!params.username) {\n\t\treturn redirect('/app/entries')\n\t}\n\n\tlet foundUserFromDb = await db.user.findFirst({\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tusername: true,\n\t\t},\n\t\twhere: {\n\t\t\tusername: params.username,\n\t\t},\n\t})\n\n\tif (!foundUserFromDb) {\n\t\treturn redirect('/app/entries')\n\t}\n\n\treturn serialize(foundUserFromDb)\n}\n\nfunction getNavLinkClassName({ isActive }: { isActive: boolean }) {\n\tlet result = `sheika button flex-col !space-x-0 space-y-3`\n\n\tif (!isActive) {\n\t\tresult += ' opacity-50'\n\t}\n\n\treturn result\n}\n\nexport default function UserPage() {\n\tlet user = deserialize<Pick<User, 'id' | 'username'>>(useLoaderData())\n\tlet currentUser = useCurrentUser()\n\n\treturn (\n\t\t<article className=\"flex flex-col w-full\">\n\t\t\t<div className=\"mt-10 flex mx-auto items-center\">\n\t\t\t\t<h1 className=\"text-xl font-bold filter drop-shadow-primary text-primary-500\">\n\t\t\t\t\t{user.username}\n\t\t\t\t</h1>\n\t\t\t\t{currentUser?.username == user.username ? (\n\t\t\t\t\t<Form className=\"ml-10\" action=\"/logout\" method=\"post\">\n\t\t\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" readOnly value=\"/app/entries\" />\n\t\t\t\t\t\t<button className=\"sheika button danger\" type=\"submit\">\n\t\t\t\t\t\t\t<FiLogOut />\n\t\t\t\t\t\t\t<span>Logout</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Form>\n\t\t\t\t) : null}\n\t\t\t</div>\n\n\t\t\t{currentUser && currentUser.username == user.username ? (\n\t\t\t\t<nav className=\"flex flex-col mx-auto my-10\">\n\t\t\t\t\t<ul className=\"flex space-x-5\">\n\t\t\t\t\t\t<li className=\"flex-1\">\n\t\t\t\t\t\t\t<NavLink className={getNavLinkClassName} to=\"entries\">\n\t\t\t\t\t\t\t\t<span>Entries</span>\n\t\t\t\t\t\t\t\t<HiCamera size=\"1.9rem\" />\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"flex-1\">\n\t\t\t\t\t\t\t<NavLink className={getNavLinkClassName} to=\"notifications\">\n\t\t\t\t\t\t\t\t<span>Notifications</span>\n\t\t\t\t\t\t\t\t<HiBell size=\"1.9rem\" />\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"flex-1\">\n\t\t\t\t\t\t\t<NavLink className={getNavLinkClassName} to=\"likes\">\n\t\t\t\t\t\t\t\t<span>Likes</span>\n\t\t\t\t\t\t\t\t<HiHeart size=\"1.9rem\" />\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<hr className=\"!my-1\" />\n\t\t\t\t</nav>\n\t\t\t) : null}\n\t\t\t<Outlet />\n\t\t</article>\n\t)\n}\n", "import {\n\tActionFunction,\n\tForm,\n\tredirect,\n\tLoaderFunction,\n\tuseLoaderData,\n\tLink,\n} from 'remix'\nimport { deserialize, serialize } from 'superjson'\nimport { db } from '~/utils/db.server'\nimport { requireUserId } from '~/utils/session.server'\nimport { Notification } from '@prisma/client'\nimport { displayDateTime } from '~/utils/date.utils'\nimport { FiAlertCircle, FiCheckCircle } from 'react-icons/fi'\nimport { parseFormData } from '../../../../utils/formdata.utils.server'\nimport { z } from 'zod'\n\nexport let loader: LoaderFunction = async ({ request }) => {\n\tlet userId = await requireUserId(request)\n\n\tlet notifications = await db.notification.findMany({\n\t\twhere: {\n\t\t\tuserId,\n\t\t},\n\t\torderBy: {\n\t\t\tcreatedAt: 'desc',\n\t\t},\n\t\ttake: 10,\n\t})\n\n\treturn serialize(notifications)\n}\n\nlet validator = z.object({\n\tid: z.string().uuid(),\n\tredirectTo: z.string().optional(),\n})\n\nexport let action: ActionFunction = async ({ request }) => {\n\tlet { id, redirectTo } = await parseFormData(request, validator)\n\n\tconsole.log(\n\t\t'Request to mark notification',\n\t\tid,\n\t\t'as seen and redirect to',\n\t\tredirectTo,\n\t)\n\n\tawait db.notification.update({\n\t\tdata: {\n\t\t\tseenAt: new Date(),\n\t\t},\n\t\twhere: {\n\t\t\tid,\n\t\t},\n\t})\n\n\tif (redirectTo) {\n\t\treturn redirect(redirectTo)\n\t} else {\n\t\treturn null\n\t}\n}\n\nfunction displayNotifTitle(notif: Notification) {\n\t// By default we jst display the title\n\tlet title = <h1>{notif.title}</h1>\n\n\t// There is an action only if the title can be clicked\n\tif (notif.link) {\n\t\tif (notif.seenAt) {\n\t\t\t// If the notif has already been seen, we just make a link to redirect\n\t\t\ttitle = (\n\t\t\t\t<Link to={notif.link}>\n\t\t\t\t\t<h1>{notif.title}</h1>\n\t\t\t\t</Link>\n\t\t\t)\n\t\t} else {\n\t\t\t// If the notif is stil new, click will update the seenAt AND redirect to the link\n\t\t\ttitle = (\n\t\t\t\t<Form method=\"post\">\n\t\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" readOnly value={notif.link} />\n\t\t\t\t\t<input type=\"hidden\" name=\"id\" readOnly value={notif.id} />\n\t\t\t\t\t<button className=\"no-style\">\n\t\t\t\t\t\t<h1 className=\"font-bold\">{notif.title}</h1>\n\t\t\t\t\t</button>\n\t\t\t\t</Form>\n\t\t\t)\n\t\t}\n\t}\n\n\treturn title\n}\n\nfunction displayNotif(notif: Notification) {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex items-center text-2xl space-x-3\">\n\t\t\t\t{notif.seenAt ? (\n\t\t\t\t\t<FiCheckCircle className=\"mx-4\"></FiCheckCircle>\n\t\t\t\t) : (\n\t\t\t\t\t<Form method=\"post\">\n\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t<FiAlertCircle></FiAlertCircle>\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"id\" readOnly value={notif.id} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t\t<div\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t'flex flex-col ' + (!notif.seenAt && 'filter drop-shadow-primary')\n\t\t\t\t\t}>\n\t\t\t\t\t{displayNotifTitle(notif)}\n\t\t\t\t\t<small className=\"text-sm\">on {displayDateTime(notif.createdAt)}</small>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p className=\"italic ml-10 my-5\">{notif.content}</p>\n\t\t\t<hr className=\"my-0\" />\n\t\t</>\n\t)\n}\n\nexport default function UserNotificationsPage() {\n\tlet notifs = deserialize<Notification[]>(useLoaderData())\n\n\tif (notifs?.length > 0) {\n\t\treturn (\n\t\t\t<ul className=\"mx-auto\">\n\t\t\t\t{notifs.map(notif => (\n\t\t\t\t\t<li key={notif.id} className=\"p-5 text-primary-500 font-bold\">\n\t\t\t\t\t\t{displayNotif(notif)}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"mx-auto\">\n\t\t\t\t<h1>No new notifications</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n", "import { LinksFunction, useLoaderData } from 'remix'\nimport { deserialize } from 'superjson'\nimport { stylesheet as entryCardStylesheet } from '~/features/entries/components/entry-card'\nimport EntryList from '~/features/entries/components/entry-list'\nimport { EntryInList } from '~/features/entries/types/entry-in-list'\nimport { userEntriesPageLoader } from '~/features/users/api/entries-page.server'\nimport { UserEntriesPageData } from '~/features/users/types/page'\nimport entriesStylesheet from '~/styles/entries.css'\nimport { Paginated } from '~/utils/pagination.server'\n\nexport let links: LinksFunction = () => [\n\tentryCardStylesheet,\n\t{ rel: 'stylesheet', href: entriesStylesheet },\n]\n\nexport let loader = userEntriesPageLoader\n\nexport default function UserPage() {\n\tlet { items, page, totalItems, itemsPerPage } = deserialize<\n\t\tPaginated<EntryInList>\n\t>(useLoaderData())\n\n\treturn (\n\t\t<EntryList\n\t\t\tentries={items}\n\t\t\tpage={page}\n\t\t\ttotal={totalItems}\n\t\t\titemsPerPage={itemsPerPage}\n\t\t/>\n\t)\n}\n", "import React from 'react'\nimport { Link } from 'remix'\nimport SheikahLogo from '~/components/sheika-logo'\nimport entryCardStylesheet from '~/styles/entry-card.css'\nimport { EntryInList } from '../types/entry-in-list'\nimport EntryFrame from './entry-frame'\nimport EntrySelector from './entry-selector'\n\nexport let stylesheet = { rel: 'stylesheet', href: entryCardStylesheet }\n\ninterface EntryCardProps {\n  entry: EntryInList\n}\n\nconst EntryCard = ({ entry }: EntryCardProps) => {\n  return (\n    <Link\n      prefetch=\"intent\"\n      to={`/app/entries/${entry.slug}`}\n      className=\"outline-none\"\n    >\n      <div className=\"entry-card\">\n        <section className=\"picture\">\n          <div className=\"pic-wrapper\">\n            {entry.thumbnailUrl ? (\n              <img\n                loading=\"lazy\"\n                className=\"picture\"\n                src={entry.thumbnailUrl}\n                alt={entry.title}\n              />\n            ) : (\n              <SheikahLogo className=\"picture text-primary-700\" />\n            )}\n          </div>\n          <EntrySelector />\n          <EntryFrame />\n        </section>\n        <section className=\"title\">\n          <h1 className=\"font-bold text-xl\">{entry.title}</h1>\n          <h2>by {entry.createdBy}</h2>\n        </section>\n      </div>\n    </Link>\n  )\n}\n\nexport default EntryCard\n", "export default function EntryFrame() {\n  return (\n    <svg\n      className=\"frame\"\n      width=\"46\"\n      height=\"46\"\n      version=\"1.1\"\n      viewBox=\"0 0 46.881 46.878\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g transform=\"translate(-77.171 -129.72)\">\n        <path\n          d=\"m80.877 129.88h39.44l3.5724 3.4888v39.698l-3.5105 3.3622h-39.474l-3.5647-3.4106v-39.549z\"\n          fillOpacity=\"0\"\n          stroke=\"currentColor\"\n          strokeWidth=\".32769\"\n        />\n        <g fill=\"currentColor\">\n          <path\n            transform=\"scale(.26458)\"\n            d=\"m457.34 490.27 11.512 11.512v-5.7754h-5.7266v-5.7266l5.7266 5.7266v-5.7363z\"\n          />\n          <path d=\"m124.05 173.55-3.0458 3.0458h1.5281v-1.5152h1.5152l-1.5152 1.5152h1.5177z\" />\n          <path d=\"m80.217 176.59-3.0458-3.0458v1.5281h1.5152v1.5152l-1.5152-1.5152v1.5177z\" />\n          <path d=\"m77.171 132.77 3.0458-3.0458h-1.5281v1.5152h-1.5152l1.5152-1.5152h-1.5177z\" />\n        </g>\n      </g>\n    </svg>\n  )\n}\n", "export default function EntrySelector() {\n  return (\n    <svg\n      className=\"selector\"\n      width=\"150\"\n      height=\"150\"\n      viewBox=\"0 0 150 150\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g transform=\"translate(-30.820808,-64.00766)\">\n        <path\n          fill=\"currentColor\"\n          d=\"M 30.820808,64.00766 H 42.939469 L 30.820808,76.211487 Z\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"M 181.2547,64.00766 V 76.126321 L 169.05087,64.00766 Z\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"M 181.2547,214.55994 H 169.13604 L 181.2547,202.35611 Z\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"m 30.820808,214.55994 v -12.11867 l 12.20383,12.11867 z\"\n        />\n      </g>\n    </svg>\n  )\n}\n", "import { Link } from 'remix'\nimport { EntryInList } from '../types/entry-in-list'\nimport EntryCard from './entry-card'\n\ntype EntryListProps = {\n\tentries: EntryInList[]\n\tpage: number\n\ttotal: number\n\titemsPerPage: number\n}\n\nexport default function EntryList({\n\tentries,\n\tpage,\n\ttotal,\n\titemsPerPage,\n}: EntryListProps) {\n\treturn (\n\t\t<div className=\"md:p-10 lg:p-20\">\n\t\t\t<ul className=\"md:px-10 lg:px-20 flex flex-wrap\">\n\t\t\t\t{entries.map(entry => (\n\t\t\t\t\t<li className=\"w-full md:w-1/3 lg:w-1/4 xl:w-1/5 p-5\" key={entry.slug}>\n\t\t\t\t\t\t<EntryCard entry={entry} />\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<nav>\n\t\t\t\t<div className=\"w-full flex justify-center space-x-5\">\n\t\t\t\t\t{page - 1 > 0 ? (\n\t\t\t\t\t\t<Link prefetch=\"intent\" className=\"sheika button\" to={'?p=' + (page - 1)}>\n\t\t\t\t\t\t\tPrevious page\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{page + 1 <= Math.ceil(total / itemsPerPage) ? (\n\t\t\t\t\t\t<Link prefetch=\"intent\" className=\"sheika button\" to={'?p=' + (page + 1)}>\n\t\t\t\t\t\t\tNext page\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t{total > itemsPerPage ? (\n\t\t\t\t\t<small className=\"block w-full text-center text-primary-500\">\n\t\t\t\t\t\tPage {page} / {Math.ceil(total / itemsPerPage)}\n\t\t\t\t\t</small>\n\t\t\t\t) : null}\n\t\t\t</nav>\n\t\t</div>\n\t)\n}\n", "import { LoaderFunction, redirect } from 'remix'\nimport { serialize } from 'superjson'\nimport {\n\tcomputeEntryInListFields,\n\tEntryInList,\n\tEntryInListFromDb,\n\tprismaEntryInListSelect,\n} from '~/features/entries/types/entry-in-list'\nimport { db } from '~/utils/db.server'\nimport { paginateLoader } from '~/utils/pagination.server'\n\nexport let userEntriesPageLoader: LoaderFunction = async ({\n\tparams,\n\trequest,\n}) => {\n\tif (!params.username) {\n\t\treturn redirect('/app/entries')\n\t}\n\n\tlet foundUserFromDb = await db.user.findFirst({\n\t\tselect: {\n\t\t\tid: true,\n\t\t},\n\t\twhere: {\n\t\t\tusername: params.username,\n\t\t},\n\t})\n\n\tif (!foundUserFromDb) {\n\t\treturn redirect('/app/entries')\n\t}\n\n\tlet getItems = async (pageNumber: number, itemsPerPage: number) => {\n\t\tlet items: EntryInListFromDb[] = await db.entry.findMany({\n\t\t\tselect: {\n\t\t\t\t...prismaEntryInListSelect,\n\t\t\t},\n\t\t\ttake: itemsPerPage,\n\t\t\tskip: itemsPerPage * pageNumber,\n\t\t\twhere: {\n\t\t\t\tuserId: foundUserFromDb!.id,\n\t\t\t},\n\t\t\torderBy: {\n\t\t\t\tcreatedAt: 'desc',\n\t\t\t},\n\t\t})\n\n\t\treturn await Promise.all(items.map(await computeEntryInListFields))\n\t}\n\n\tlet paginated = await paginateLoader<EntryInList>({\n\t\trequest,\n\t\tgetItems,\n\t\tgetTotal: () =>\n\t\t\tdb.entry.count({\n\t\t\t\twhere: {\n\t\t\t\t\tuserId: foundUserFromDb!.id,\n\t\t\t\t},\n\t\t\t}),\n\t})\n\n\treturn serialize(paginated)\n}\n", "import { Entry, Picture, Prisma, User } from '@prisma/client'\nimport { pictures } from '~/utils/storage.server'\n\nexport type EntryInList = Pick<Entry, 'title' | 'slug'> & {\n\tthumbnailUrl?: string\n\tcreatedBy: string\n}\n\nexport type EntryInListFromDb = Pick<Entry, 'slug' | 'title' | 'slug'> & {\n\tpictures: Pick<Picture, 'thumbnail'>[]\n\tuser: Pick<User, 'username'>\n}\n\nexport const prismaEntryInListSelect = Prisma.validator<Prisma.EntrySelect>()({\n\ttitle: true,\n\tslug: true,\n\tpictures: {\n\t\tselect: {\n\t\t\tthumbnail: true,\n\t\t},\n\t},\n\tuser: {\n\t\tselect: {\n\t\t\tusername: true,\n\t\t},\n\t},\n})\n\nexport async function computeEntryInListFields(\n\tentry: EntryInListFromDb,\n): Promise<EntryInList> {\n\treturn {\n\t\t...entry,\n\t\tcreatedBy: entry.user?.username,\n\t\tthumbnailUrl: entry.pictures?.[0]?.thumbnail\n\t\t\t? (await pictures.getPublicUrl(entry.pictures?.[0]?.thumbnail).publicURL) ??\n\t\t\t  undefined\n\t\t\t: undefined,\n\t}\n}\n", "const defaultItemsPerPage = 20\n\nexport interface Paginated<Item> {\n\titems: Item[]\n\ttotalItems: number\n\titemsPerPage: number\n\tpage: number\n}\n\nexport async function paginateLoader<Item>({\n\trequest,\n\tgetItems,\n\tgetTotal,\n\titemsPerPage = defaultItemsPerPage,\n}: {\n\trequest: Request\n\tgetItems: (page: number, itemsPerPage: number) => Promise<Item[]>\n\tgetTotal: () => Promise<number>\n\titemsPerPage?: number\n}): Promise<Paginated<Item>> {\n\tlet url = new URL(request.url)\n\tlet page = url.searchParams.get('p')\n\tlet pageNumber = page && Number(page) > 0 ? Number(page) - 1 : 0\n\n\tlet [items, totalItems] = await Promise.all([\n\t\tgetItems(pageNumber, itemsPerPage),\n\t\tgetTotal(),\n\t])\n\n\treturn {\n\t\titems: items ?? [],\n\t\tpage: pageNumber + 1,\n\t\ttotalItems,\n\t\titemsPerPage,\n\t}\n}\n", "import { LoaderFunction, redirect } from 'remix'\n\nexport let loader: LoaderFunction = ({ params }) => {\n\treturn redirect(`/app/users/${params.username}/entries`)\n}\n", "import { LinksFunction, LoaderFunction, useLoaderData } from 'remix'\nimport { deserialize, serialize } from 'superjson'\nimport EntryList from '~/features/entries/components/entry-list'\nimport {\n\tcomputeEntryInListFields,\n\tEntryInList,\n\tprismaEntryInListSelect,\n} from '~/features/entries/types/entry-in-list'\nimport { db } from '~/utils/db.server'\nimport { Paginated, paginateLoader } from '~/utils/pagination.server'\nimport { requireUserId } from '~/utils/session.server'\nimport entriesStylesheet from '~/styles/entries.css'\nimport { stylesheet as entryCardStylesheet } from '~/features/entries/components/entry-card'\n\nexport let links: LinksFunction = () => [\n\tentryCardStylesheet,\n\t{ rel: 'stylesheet', href: entriesStylesheet },\n]\n\nexport let loader: LoaderFunction = async ({ request, params }) => {\n\tlet userId = await requireUserId(request)\n\n\tlet getItems = async (pageNumber: number, itemsPerPage: number) => {\n\t\tlet baseItems = await db.entry.findMany({\n\t\t\tselect: prismaEntryInListSelect,\n\t\t\ttake: itemsPerPage,\n\t\t\tskip: itemsPerPage * pageNumber,\n\t\t\twhere: {\n\t\t\t\tlikedBy: {\n\t\t\t\t\tsome: {\n\t\t\t\t\t\tid: userId,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tuserId: {\n\t\t\t\t\tnot: userId,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\n\t\treturn await Promise.all(baseItems.map(computeEntryInListFields))\n\t}\n\n\tlet paginated = await paginateLoader<EntryInList>({\n\t\trequest,\n\t\tgetItems,\n\t\tgetTotal: () =>\n\t\t\tdb.entry.count({\n\t\t\t\twhere: {\n\t\t\t\t\tuserId,\n\t\t\t\t},\n\t\t\t}),\n\t})\n\n\treturn serialize(paginated)\n}\n\nexport default function UserLikedPage() {\n\tlet { totalItems, itemsPerPage, page, items } = deserialize<\n\t\tPaginated<EntryInList>\n\t>(useLoaderData())\n\n\treturn (\n\t\t<EntryList\n\t\t\tentries={items}\n\t\t\ttotal={totalItems}\n\t\t\tpage={page}\n\t\t\titemsPerPage={itemsPerPage}\n\t\t/>\n\t)\n}\n", "import { User } from '@prisma/client'\nimport { FiPlus } from 'react-icons/fi'\nimport {\n\tLink,\n\tLinksFunction,\n\tLoaderFunction,\n\tMetaFunction,\n\tuseLoaderData,\n} from 'remix'\nimport { deserialize, serialize } from 'superjson'\nimport SheikahLogo from '~/components/sheika-logo'\nimport { stylesheet as entryCardStylesheet } from '~/features/entries/components/entry-card'\nimport EntryList from '~/features/entries/components/entry-list'\nimport {\n\tcomputeEntryInListFields,\n\tEntryInList,\n\tEntryInListFromDb,\n\tprismaEntryInListSelect,\n} from '~/features/entries/types/entry-in-list'\nimport useCurrentUser from '~/hooks/useCurrentUser'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\n\nconst itemsPerPage = 20\n\nexport let links: LinksFunction = () => [entryCardStylesheet]\n\nexport let meta: MetaFunction = () => {\n\treturn {\n\t\ttitle: 'Entries | Sheikah Diary',\n\t}\n}\n\nexport let loader: LoaderFunction = async ({ request }) => {\n\tlet url = new URL(request.url)\n\tlet page = url.searchParams.get('p')\n\tlet pageNumber = page && Number(page) > 0 ? Number(page) - 1 : 0\n\n\tlet total = await db.entry.count()\n\n\tlet data: EntryInListFromDb[] = await db.entry.findMany({\n\t\tselect: prismaEntryInListSelect,\n\t\ttake: itemsPerPage,\n\t\tskip: itemsPerPage * pageNumber,\n\t\torderBy: {\n\t\t\tcreatedAt: 'desc',\n\t\t},\n\t})\n\n\tlet entries: EntryInList[] = await Promise.all(\n\t\tdata.map(await computeEntryInListFields),\n\t)\n\n\treturn serialize({\n\t\tpage: pageNumber + 1,\n\t\ttotal,\n\t\tentries,\n\t})\n}\n\nexport default function EntriesIndexPage() {\n\tlet { page, total, entries } = deserialize<{\n\t\tpage: number\n\t\ttotal: number\n\t\tentries: EntryInList[]\n\t}>(useLoaderData())\n\n\tlet currentUser = useCurrentUser()\n\n\tif (total > 0) {\n\t\treturn (\n\t\t\t<EntryList\n\t\t\t\tentries={entries}\n\t\t\t\tpage={page}\n\t\t\t\ttotal={total}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t/>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"h-full w-full flex\">\n\t\t\t\t<div className=\"m-auto flex flex-col text-primary-500\">\n\t\t\t\t\t<SheikahLogo className=\"w-60 h-60 filter drop-shadow-primary\" />\n\t\t\t\t\t<span className=\"font-bold text-2xl mx-auto text-shadow-primary\">\n\t\t\t\t\t\tNo entries yet\n\t\t\t\t\t</span>\n\t\t\t\t\t{!currentUser ? null : (\n\t\t\t\t\t\t<Link to=\"/app/entries/new\" className=\"sheika button flex mx-auto mt-5\">\n\t\t\t\t\t\t\t<FiPlus size=\"1.5rem\" className=\"mr-3\" />\n\t\t\t\t\t\t\tAdd an entry\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n", "import {\n  LinksFunction,\n  MetaFunction,\n  useActionData,\n  useTransition,\n} from 'remix'\nimport { createAction, FormError } from '~/features/entries/api/update.server'\nimport EntryForm from '~/features/entries/components/entry-form'\nimport formStylesheet from '~/styles/forms.css'\n\nexport let links: LinksFunction = () => [\n  { rel: 'stylesheet', href: formStylesheet },\n]\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: 'New Entry | Sheikah Diary',\n  }\n}\n\nexport let action = createAction\n\nexport default function NewEntryPage() {\n  let errors = useActionData<FormError>()\n  let transition = useTransition()\n\n  return (\n    <EntryForm\n      errors={errors}\n      transition={transition}\n      submitLabel={{ default: 'Create entry', sending: 'Creating entry' }}\n      action=\"/app/entries/new\"\n    />\n  )\n}\n"],
  "mappings": "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",
  "names": []
}
